#! /usr/bin/env python
#
# Copyright (C) 1998 by the Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software 
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

"""Send a message to the mailing list owner.

This script gets called by the wrapper.

Stdin is the mail message, and argv[1] is the name of the mailing list
whose owner(s) to send mail to.
"""


import sys
import mimetools

import paths

from Mailman import mm_cfg
from Mailman import MailList
from Mailman import Message
from Mailman.Handlers import HandlerAPI
from Mailman.Bouncers import BouncerAPI
from Mailman.Logging.Utils import LogStdErr
from Mailman.pythonlib.StringIO import StringIO

LogStdErr('error', 'post')



def main():
    # Only let one program per list run at any one time.  TBD: This *can*
    # fail, and should send back an error message when it does.
    mlist = MailList.MailList(sys.argv[1])
    try:
        s = StringIO(sys.stdin.read())
        msg = mimetools.Message(s)
        if mlist.bounce_processing:
            if BouncerAPI.ScanMessages(mlist, msg):
                return
        # okay, no bounces were detected, but we have to convert this
        # mimetools.Message thingie to one of our OutgoingMessages.
        msg = Message.OutgoingMessage(s.getvalue())
        msg.recips = mlist.owner[:]
        # for debugging purposes
        msg.recips.append(mm_cfg.MAILMAN_OWNER)
        HandlerAPI.DeliverToUser(mlist, msg)
    finally:
        mlist.Save()
        mlist.Unlock()



if __name__ == '__main__':
    main()
