#! /usr/local/bin/python 

"""Accept posts to a list and handle them properly.

This script is invoked via the mail wrapper.

Stdin is the mail message, and argv[1] is the name of the target mailing
list."""

# Todo: check size of To: list < 100
# Send back why the post was rejected.

import sys

sys.path.append('/home/mailman/mailman/modules')

import maillist, mm_message, mm_err, mm_cfg

# Only let one program run at once per list.

# TODO: This can fail, and should send back an error message when it does.
current_list = maillist.MailList(sys.argv[1])

try:
    prog = current_list.filter_prog
    if prog:
	import os, __main__
	file = os.path.join('/home/mailman/mailman/filters', prog)
	try:
	    execfile(file)
	    text = __main__.mailman_text
	except:
	    text = sys.stdin.read()
    else:
	text = sys.stdin.read()
    msg = mm_message.IncomingMessage(text)

    try:
	current_list.Post(msg)
    except mm_err.MMNeedApproval, err_msg:
	if (current_list.dont_respond_to_post_requests
            or err_msg == mm_err.MODERATED_LIST_MSG):
            # Do not send hold-for-approval notices for moderated messages.
	    sys.exit(0)
            
	the_sender = msg.GetSender()
	subj = msg.getheader('subject')
	if not subj:
	    subj = '[no subject]'
	body = '''
Your mail to '%s' with the subject:

%s

Is being held until the list moderator can review it for approval.

The reason it is being held:

        %s

Either the message will get posted to the list, or you will receive 
notification of the moderator's decison.
''' % (current_list.real_name, subj, err_msg)
	
	current_list.SendTextToUser( subject = 'Mail sent to %s' % 
	                                         current_list.real_name,
				     recipient = the_sender,
	     			     text = body)
# Let another process run.
finally:
    current_list.Unlock()
    



