#!/usr/local/bin/python

"""Produce listinfo page, primary web entry-point to maillists.

Errors are redirected to logs/errors."""

# No lock needed in this script, because we don't change data.

import sys
sys.path.append('/home/mailman/mailman/modules')

import os, string
from regsub import gsub
import mm_utils, maillist, htmlformat

try:
    sys.stderr = mm_utils.StampedLogger("error", label = 'listinfo',
                                        manual_reprime=1, nofail=0)
except IOError:
    pass                        # Oh well - SOL on redirect, errors show thru.

doc = htmlformat.Document()

path = os.environ['PATH_INFO']

list_info = mm_utils.GetPathPieces(path)

if len(list_info) < 1:
    doc.AddItem(htmlformat.Header(2, "Invalid options to CGI script."))
    print doc.Format()
    sys.exit(0)

list_name = string.lower(list_info[0])

try:
  list = maillist.MailList(list_name)
except:
  doc.AddItem(htmlformat.Header(2, "%s: No such list."  % list_name ))
  print doc.Format()
  sys.exit(0)

if not list._ready:
    doc.AddItem(htmlformat.Header(2, "%s: No such list." % list_name))
    print doc.Format()
    sys.exit(0)

replacements = list.GetStandardReplacements()


if not list.digestable or not list.nondigestable:
    replacements['<mm-digest-radio-button>'] = ""
    replacements['<mm-undigest-radio-button>'] = ""
else:
    replacements['<mm-digest-radio-button>'] = list.FormatDigestButton()
    replacements['<mm-undigest-radio-button>'] = list.FormatUndigestButton()
replacements['<mm-plain-digests-button>'] = list.FormatPlainDigestsButton()
replacements['<mm-mime-digests-button>'] = list.FormatMimeDigestsButton()
replacements['<mm-subscribe-box>'] = list.FormatBox('email')
replacements['<mm-subscribe-button>'] = list.FormatButton('email-button',
                                                          text='Subscribe')
replacements['<mm-new-password-box>'] = list.FormatSecureBox('pw')
replacements['<mm-confirm-password>'] = list.FormatSecureBox('pw-conf')
replacements['<mm-form-start>'] = list.FormatFormStart('subscribe')
replacements['<mm-editing-options>'] = list.FormatEditingOption()
replacements['<mm-info-button>'] = \
                         htmlformat.SubmitButton('UserOptions',
                                                 'Edit Options').Format()
replacements['<mm-roster-option>'] = list.FormatRosterOptionForUser()

doc.AddItem(list.ParseTags('listinfo.html', replacements))
print doc.Format()
