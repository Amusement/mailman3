#! /usr/bin/env python
#
# Copyright (C) 1998 by the Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software 
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

import paths
import maillist, mm_cfg, mm_utils, marshal, os

names = mm_utils.list_names()
try:
    file = open(os.path.join(mm_cfg.DATA_DIR, "gate_watermarks"), "r")
    watermarks = marshal.load(file)
except IOError, (x,y):
    if x <> 2:
      raise IOError, (x, y)
    watermarks = {}

for name in names:
    if os.fork():
	continue
    if watermarks.has_key(name):
        wm = watermarks[name]
    else:
        wm = 0
    # Save the current state to .last, in case we crash while writing out,
    # and corrupt the file.
    list = maillist.MailList(name, lock=0)
    file = open(os.path.join(mm_cfg.DATA_DIR, "gate_watermarks.last"), "w")
    marshal.dump(watermarks, file)
    file.close()
    watermarks[name] = list.PollNewsGroup(wm)
    # Save after every newsgroup... should probably save after every post.
    # Reason being, want to make sure in case of a system crash or something,
    # The same messages don't get gated multiple times.
    file = open(os.path.join(mm_cfg.DATA_DIR, "gate_watermarks"), "w")
    marshal.dump(watermarks, file)
    file.close()