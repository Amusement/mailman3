Acknowledgment headers
======================

Messages that flow through the global pipeline get their headers 'cooked',
which basically means that their headers go through several mostly unrelated
transformations.  Some headers get added, others get changed.  Some of these
changes depend on mailing list settings and others depend on how the message
is getting sent through the system.  We'll take things one-by-one.

    >>> from email import message_from_string
    >>> from Mailman.Message import Message
    >>> from Mailman.Handlers.CookHeaders import process
    >>> from Mailman.configuration import config
    >>> from Mailman.database import flush
    >>> mlist = config.list_manager.create('_xtest@example.com')
    >>> mlist.subject_prefix = u''
    >>> flush()

When the message's metadata has a 'noack' key set, an 'X-Ack: no' header is
added.

    >>> msg = message_from_string("""\
    ... From: aperson@example.com
    ...
    ... A message of great import.
    ... """, Message)
    >>> process(mlist, msg, dict(noack=True))
    >>> print msg.as_string()
    From: aperson@example.com
    X-Ack: no
    X-BeenThere: _xtest@example.com
    X-Mailman-Version: ...
    Precedence: list
    <BLANKLINE>
    A message of great import.
    <BLANKLINE>

Any existing X-Ack header in the original message is removed.

    >>> msg = message_from_string("""\
    ... X-Ack: yes
    ... From: aperson@example.com
    ...
    ... A message of great import.
    ... """, Message)
    >>> process(mlist, msg, dict(noack=True))
    >>> print msg.as_string()
    From: aperson@example.com
    X-Ack: no
    X-BeenThere: _xtest@example.com
    X-Mailman-Version: ...
    Precedence: list
    <BLANKLINE>
    A message of great import.
    <BLANKLINE>
