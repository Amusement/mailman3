# Copyright (C) 1998 by the Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software 
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

"""Parse bounce messages generated by qmail.
"""

import string
import re

hcre = re.compile(r'\(qmail\s+\d+\s+invoked for bounce\)')
acre = re.compile(r'<(?P<addr>[^>]*)>:')



def process(mlist, msg):
    # there should be a received header that reveals that it's qmail bouncing
    # the message.  don't rely on information in the body for this.
    headers = msg.getallmatchingheaders('received')
    for h in headers:
        try:
            hdr, val = string.split(h, ':', 1)
        except ValueError:
            continue
        if hcre.search(val):
            # probably a qmail bounce
            break
    else:
        # nope
        return None
    # the address is the first none blank line after qmail's "friendly"
    # message.  hmm...
    # small state machine:
    #    0 = nothing seen
    #    1 = friendly comment seen
    #    2 = done with comment, addr must be next up
    state = 0
    msg.rewindbody()
    while 1:
        line = msg.fp.readline()
        if not line:
            # didn't find it
            return None
        line = string.strip(line)
        if state == 0 and line:
            state = 1
        elif state == 1 and not line:
            state = 2
        elif state == 2 and line:
            mo = acre.match(line)
            if mo:
                return [mo.group('addr')]
            # hmm, probably not a qmail bounce
            return None
