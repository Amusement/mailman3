This is a snapshot of the Exim & Mailman HOWTO document.  The current
original document can be found on the exim web site at
        http://www.exim.org/howto/mailman.html

=======================================================================

                    HOWTO - Using exim and mailman together
                                       
   Mailman is a list manager with web front end and built in archiving
   functions.  Details can be found at [1] http://www.list.org/
   
Mailman configuration

   There is no Mailman configuration needed other than the standard
   options detailed in the Mailman install documentation.  The exim
   configuration is transparent to Mailman.  The uid/gid settings for
   Mailman must match those in the config fragments given below.
   
Exim configuration

   The Exim configuration is built so that a list created within
   Mailman automagically appears to Exim without the need for
   additional alias files to be changed.
   
   The drawback of this configuration is that it will work poorly on
   systems supporting lists in several different mail domains.  While
   Mailman handles virtual domains, it does not yet support having two
   lists with the same name in different virtual domains, using the
   same Mailman installation.  This will eventually change.
   
   The configuration file segments included are to be built on top of
   an already functional Exim configuration, which accepts mail for
   the domain in which the list resides (i.e. that domain is already
   in local_domains) - should this domain be separate from the others
   handled by this Exim, then add the list domain to local_domains,
   add a domains=my.list.domain option to each of the directors and
   you may wish to exclude that domain from the other directors.
   
   There are 3 config file sections below which need pasting into the
   appropriate parts of the main exim config file.  The first one may also
   need tailoring to your Mailman configuration.  Note that these have
   been written to allow you to have co-habitating Mailman 2.0.x and
   Mailman 2.1 installations.
   
Main config file section
    
## Top section of config file - macro definitions.  Tailor these to
## fit your installation; pretty much everything else should just
## fit...
##
# Home dir for your Mailman installation
MAILMAN21_HOME=/usr/local/mailman
# Wrapper script for Mailman
MAILMAN21_WRAP=MAILMAN21_HOME/mail/mailman
# User and group for Mailman, should match your --with-mail-gid
# switch to Mailman's configure script.
MAILMAN21_UID=mailman
MAILMAN21_GID=mailman

    Transports config file section
    
## Transports section
##
## For Mailman 2.1, you only need one transport, albeit with a rather
## elaborate command...
mm21_transport:
    driver = pipe
    command = MAILMAN21_WRAP "${if def:local_part_suffix{${substr_1:${lc:$local_part_suffix}}}{post}}" ${lc:$local_part}
    current_directory = MAILMAN21_HOME
    home_directory = MAILMAN21_HOME
    user = MAILMAN21_UID
    group = MAILMAN21_GID

### end of transports section fragment

    Directors config file section
    
## Directors section [this deals with local addresses]
##
## List existence checks are done by seeing if the file
## MAILMAN21_HOME/lists/*/config.pck exists.

mm21_director:
    driver = smartuser
    require_files = MAILMAN21_HOME/lists/${lc:$local_part}/config.pck
    suffix = "-bounces:-join:-leave:-owner:-request:-admin"
    suffix_optional
    transport = mm21_transport

## End of directors fragment
## End of config files bits

Notes

   Exim should be configured to allow reasonable volume - i.e. no
   setting max_recipients down to a silly value, and with normal
   degrees of security - ie allowing relaying from 127.0.0.1 (thats
   vital), but pretty much nothing else.  Parallel deliveries and
   other tweaks can also be used.  Delay warning messages should be
   switched off or configured to only happen for non-list mail -
   unless you like receiving tons of mail when a host is down.
   
  Problems
  
    * Mailman should ignore Exim delay warning messages, even though
      Exim should never send this to list messages.  Mailman 2.1's
      general bounce detection and VERP support should greatly improve
      the bounce detector's hit rates.

    * List existence is checked on whether there is a config.pck file
      for a list.  If you delete lists by foul means, be aware of this.

    * If you are getting Exim or Mailman complaining about user ids
      when you send mail to a list, check that the MAILMAN21_UID and
      MAILMAN21_GID match those of Mailman itself (i.e. what were used
      in the configure script).  Also make sure you do not have
      aliases in the main alias file for the list.
       
Other Tweaks

    NOTE: This section may need rewriting...

    One solution passed to me for handling virtual domains was - since
    I use Mailman in a virtual domain configuration with a separate
    installation for each virtual domain, I did a slight modification
    like this:

## transport configurations

command = "/virtual/${domain}/mailman/mail/mailman post ${lc:$local_part}"
current_directory = /virtual/${domain}/mailman
home_directory = /virtual/${domain}/mailman

## and in the director part:

require_files = /virtual/${domain}/mailman/lists/${lc:$local_part}/config.pck

Exim List Efficiency Tweaks

   This is a set of configuration directives I used on the list boxes
   I admin.  Some of these are necessary, others are cosmetic, a few
   are probably superfluous - they work for me!

# definition of injecting IP addresses
LOCAL_NETS=127.0.0.1/32
#
# Extra logging data - not necessary but makes the logs more
# useful, but bigger
# lookup all hostnames - puts hostnames into log as well as ips
host_lookup = 0.0.0.0/0
# tweak logging
log_all_parents
log_file_path = /var/log/exim/%s.log
log_received_recipients
log_refused_recipients
log_received_sender
log_smtp_confirmation
#
# RBL settings - these are more severe than I use
rbl_domains = rbl.maps.vix.com/reject:relays.mail-abuse.org/reject:dul.maps.vix
.com/reject:relays.orbs.org=127.0.0.2,127.0.0.3/reject
rbl_hosts = !LOCAL_NETS:0.0.0.0/0
rbl_log_rcpt_count
recipients_reject_except=postmaster@*:*-admin@*
#
# relay control - from our local network only
host_accept_relay = LOCAL_NETS
#
# delay warnings - second line is now default, but earlier versions of
# exim need it setting
delay_warning = 26h
##delay_warning_condition = "${if match{$h_precedence:}{(?i)bulk|list|junk}{no}
{yes}}"
#
# Verify receipient addresses on everything except local injects
# DO NOT verify addresses from mailman - this would slow down
# the acceptance of messages dramatically
receiver_verify_hosts = !127.0.0.1/8:0.0.0.0/0
sender_verify
#
# performance tweaks - 1st is good for linux, maybe less so for others
split_spool_directory
remote_max_parallel = 15

List verification

   This is how a set of address tests for the exim lists look on a
   working system. (command lines start with ">")
> /usr/sbin/exim -v -bt exim-users
exim-users@www.exim.org
  deliver to exim-users in domain www.exim.org
  director = list_director, transport = list_transport

> /usr/sbin/exim -bt exim-users-request
exim-users-request@www.exim.org
  deliver to exim-users in domain www.exim.org
  director = list_request_director, transport = list_request_transport

> /usr/sbin/exim -bt exim-users-admin
exim-users-admin@www.exim.org
  deliver to exim-users in domain www.exim.org
  director = list_admin_director, transport = list_admin_transport


  __________________________________________________________________________

    [2]Nigel Metheringham
    
References

   1. http://www.list.org/
   2. mailto:Postmaster@exim.org
