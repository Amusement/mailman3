#! /usr/bin/env python
#
# Copyright (C) 1998 by the Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software 
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

"""Create a new, unpopulated maillist.

  newlist <list-name> <list-admin's-address> <admin-password> <immediate>

You can specify as many of the arguments as you want on the command line. 
The optional <immediate> argument, if present, means to send out the notice 
immediately.  Otherwise, the script hangs pending input, to give time for
the person creating the list to customize it before sending the admin an
email notice about the existence of the new list."""

import sys, crypt, os, string
import time
import paths
import maillist, mm_utils, mm_cfg

ADDALIASES_CMD = paths.prefix + '/bin/addaliases'

def getusername():
    username = os.environ.get('USER') or os.environ.get('LOGNAME')
    if not username:
        import pwd
        username = pwd.getpwuid(os.getuid())[0]
    if not username:
        username = '<unknown>'
    return username


def main(argv):
    if len(argv) > 1:
	list_name = argv[1]
    else:
	list_name = string.lower(raw_input("Enter the name of the list: "))

    if '@' in list_name:
	sys.stderr.write("** List name must not include '@': %s\n"
			 % `list_name`)
	sys.stderr.write("   (It's the list name, not address.)\n")
	return 1

    if list_name in mm_utils.list_names():
	sys.stderr.write("** List with name %s already exists\n" % `list_name`)
	return 1

    if len(argv) > 2:
	owner_mail = argv[2]
    else:
	owner_mail = raw_input(
	    "Enter the email of the person running the list: ")
    if len(argv) > 3:
	list_pw = argv[3]
    else:
	list_pw = raw_input("Enter the initial list password: ")

    newlist = maillist.MailList()
    pw = crypt.crypt(list_pw , mm_utils.GetRandomSeed())
    newlist.Create(list_name, owner_mail, pw)

    ###os.system('%s %s' % (ADDALIASES_CMD, list_name))
    print '''
Entry for aliases file:

## %(listname)s mailing list
## created: %(date)s %(user)s
%(list)s |"%(wrapper)s post %(listname)s"
%(admin)s |"%(wrapper)s mailowner %(listname)s"
%(request)s |"%(wrapper)s mailcmd %(listname)s"
%(owner1)s %(listname)s-admin
%(owner2)s %(listname)s-admin
''' % {'listname': list_name,
       'list'    : "%-24s" % (list_name + ":"),
       'wrapper' : '%s/wrapper' % mm_cfg.WRAPPER_DIR,
       'admin'   : "%-24s" % ("%s-admin:" % list_name),
       'request' : "%-24s" % ("%s-request:" % list_name),
       'owner1'  : "%-24s" % ("owner-%s:" % list_name),
       'owner2'  : "%-24s" % ("%s-owner:" % list_name),
       'date'    : time.strftime('%d-%b-%Y', time.localtime(time.time())),
       'user'    : getusername(),
       }

    if len(argv) < 5:
	print ("Hit enter to continue with %s owner notification..."
	       % list_name),
	sys.stdin.readline()
    sendnotice(newlist, list_name, owner_mail, list_pw)

def sendnotice(newlist, list_name, owner_mail, list_pw):
    newlist.SendTextToUser(subject="Your new mailing list",
			   recipient=owner_mail,
			   sender='mailman-owner@%s' % newlist.host_name, 
			   text="""\
The mailing list `%s' has just been created for you.  The following is some
basic information about your mailing list.

Your mailing list password is:

	%s

You need this password to configure your mailing list.  You also need it to
handle administrative requests, such as approving mail if you choose to run
a moderated list.

You can configure your mailing list at the following web page:

	%s

The web page for users of your mailing list is: 

	%s

You can even customize these web pages from the list configuration page.  
However, you do need to know HTML to be able to do this.

There is also an email-based interface for users (not administrators) of your
list; you can get info about using it by sending a message with just the word
`help' as subject or in the body, to:

	%s

To unsubscribe a user: from the mailing list 'listinfo' web page, click on
or enter the user's email address as if you were that user.  Where that
user would put in their password to unsubscribe, put in your admin
password.  You can also use your password to change member's options,
including digestification, delivery disabling, etc.

Please address all questions to mailman-owner@%s.
""" % (list_name, list_pw, 
       newlist.GetAbsoluteScriptURL('admin'), 
       newlist.GetAbsoluteScriptURL('listinfo'),
       "%s-request@%s" % (list_name, newlist.host_name),
       newlist.host_name))

newlist.Unlock()

if __name__ == "__main__":
    raise SystemExit(main(sys.argv))
