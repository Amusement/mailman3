#! @PYTHON@
#
# Copyright (C) 1998,1999,2000,2001 by the Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software 
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#
"""Remove members from a list.

Usage:
    remove_members [options] listname [addr1 ...]

Options:

    --file=file
    -f file
        Remove member addresses found in the given file.  If file is
        `-', read stdin.

    --all
    -a
        Remove all members of the mailing list.

    --help
    -h
        Print this help message and exit.

    listname is the name of the mailing list to use.

    addr1 ... are additional addresses to remove.

"""

import sys
import getopt

import paths
from Mailman import MailList
from Mailman import Errors
from Mailman.i18n import _



def usage(code, msg=''):
    print >> sys.stderr, _(__doc__)
    if msg:
        print >> sys.stderr, msg
    sys.exit(code)


def ReadFile(filename):
    lines = []
    if filename == "-":
        fp = sys.stdin
        closep = 0
    else:
        fp = open(filename)
        closep = 1
    lines = filter(None, [line.strip() for line in fp.readlines()])
    if closep:
        fp.close()
    return lines



def main():
    try:
        opts, args = getopt.getopt(
            sys.argv[1:], 'af:h', ['all', 'file=', 'help'])
    except getopt.error, msg:
        usage(1, msg)

    if len(args) < 1:
        usage(1)

    listname = args[0].lower().strip()
    addresses = args[1:]
    filename = None
    all = 0

    for opt, arg in opts:
        if opt in ('-h', '--help'):
            usage(0)
        elif opt in ('-f', '--file'):
            filename = arg
        elif opt in ('-a', '--all'):
            all = 1
                
    if filename:
        try:
            addresses = addresses + ReadFile(filename)
        except IOError:
            print _('Could not open file for reading: %(filename)s.')

    try:
        # open locked
        mlist = MailList.MailList(listname)
    except Errors.MMListError, e:
        print _('No such list: %(listname)s')
        sys.exit(1)

    if all:
        addresses = mlist.getMembers()

    try:
        for addr in addresses:
            try:
                mlist.ApprovedDeleteMember(addr)
            except Errors.MMNoSuchUserError:
                print _("User `%(addr)s' not found.")
    finally:
        # Hmm, should it be all or nothing?
        mlist.Save()
        mlist.Unlock()



if __name__ == '__main__':
    main()
