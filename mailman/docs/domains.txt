Domains
=======

Domains are how Mailman interacts with email host names and web host names.
Generally, new domains are registered in the mailman.cfg configuration file by
calling the add_domain() method.

At a minimum, the email host name must be specified.

    >>> config.add_domain('example.net')

The domain object can be looked up by email host name.

    >>> from zope.interface.verify import verifyObject
    >>> from mailman.interfaces.domain import IDomain
    >>> domain = config.domains['example.net']
    >>> verifyObject(IDomain, domain)
    True

    >>> print domain.email_host
    example.net

The base url is calculated by default if not given.

    >>> print domain.base_url
    http://example.net

There is no description by default.

    >>> print domain.description
    None

By default, the contact address is the domain's postmaster.

    >>> print domain.contact_address
    postmaster@example.net

And the url_host is by default the same as the email host.

    >>> print domain.url_host
    example.net


Full specification
------------------

The domain can also be much more fully defined.

    >>> config.add_domain(
    ...     'example.org', 'https://mail.example.org',
    ...     'The example domain',
    ...     'postmaster@mail.example.org')

    >>> domain = config.domains['example.org']
    >>> print domain.email_host
    example.org
    >>> print domain.base_url
    https://mail.example.org
    >>> print domain.description
    The example domain
    >>> print domain.contact_address
    postmaster@mail.example.org
    >>> print domain.url_host
    mail.example.org


Confirmation tokens
-------------------

Confirmation tokens can be added to either the email confirmation address...

    >>> print domain.confirm_address('xyz')
    confirm-xyz@example.org

...or the confirmation url.

    >>> print domain.confirm_url('abc')
    https://mail.example.org/confirm/abc
