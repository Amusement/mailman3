==========================
Command line list creation
==========================

A system administrator can create mailing lists from the command line.

    >>> class FakeArgs:
    ...     language = None
    ...     owners = []
    ...     quiet = False
    ...     domain = None
    ...     listname = None
    ...     notify = False
    >>> args = FakeArgs()

You cannot create a mailing list in an unknown domain...

    >>> from mailman.commands.cli_lists import Create
    >>> command = Create()

    >>> class FakeParser:
    ...     def error(self, message):
    ...         print message
    >>> command.parser = FakeParser()

    >>> args.listname = ['test@example.xx']
    >>> command.process(args)
    Undefined domain: example.xx

...although you can tell Mailman to auto-register the domain.  In that case,
the mailing list and domain will be created.

    >>> args.domain = True
    >>> command.process(args)
    Created mailing list: test@example.xx

Now both the domain and the mailing list exist in the database.

    >>> config.db.list_manager.get('test@example.xx')
    <mailing list "test@example.xx" at ...>

    >>> from mailman.interfaces.domain import IDomainManager
    >>> IDomainManager(config).get('example.xx')
    <Domain example.xx, base_url: http://example.xx,
            contact_address: postmaster@example.xx>

You can also create mailing lists in existing domains without the
auto-creation flag.

    >>> args.domain = False
    >>> args.listname = ['test1@example.com']
    >>> command.process(args)
    Created mailing list: test1@example.com

    >>> config.db.list_manager.get('test1@example.com')
    <mailing list "test1@example.com" at ...>

The command can also operate quietly.

    >>> args.quiet = True
    >>> args.listname = ['test2@example.com']
    >>> command.process(args)

    >>> config.db.list_manager.get('test2@example.com')
    <mailing list "test2@example.com" at ...>


Setting the language
====================

You can set the default language for the new mailing list when you create it.
The language must be known to Mailman.

    >>> config.languages.add('it', 'iso-8859-1', 'Italian')

    >>> args.quiet = False
    >>> args.listname = ['test3@example.com']
    >>> args.language = 'it'
    >>> command.process(args)
    Created mailing list: test3@example.com

    >>> mlist = config.db.list_manager.get('test3@example.com')
    >>> print mlist.preferred_language
    <Language [it] Italian>
    >>> args.language = None


Errors
======

You cannot create a mailing list that already exists.

    >>> command.process(args)
    List already exists: test3@example.com

The posting address of the mailing list must be valid.

    >>> args.listname = ['foo']
    >>> command.process(args)
    Illegal list name: foo
