Mailman - The GNU Mailing List Management System
Copyright (C) 1998,1999,2000,2001 Free Software Foundation, Inc.
59 Temple Place - Suite 330, Boston, MA 02111-1307, USA

Ebben az állományban a GNU Mailman telepítéséhez találunk útmutatót,
amely a GNU hagyományos autoconf programjával történik. Legelõször
a rendszeren kell bizonyos beállításokat (ezekrõl alább lehet olvasni)
elvégezni, s csak ezek után kell a Mailman programot konfigurálni és
telepíteni.

FONTOS: A crontab beállításra fordítsunk különös figyelmet, ahogy az
a lentebb le van írva, különben a Mailman nem fog megfelelõen mûködni.

FRISSÍTÉS: A frissítés legtöbbször nem jelent mást, mint a régi 
verzióra egy új verzió másolását. Azonban frissítés elõtt ajánljuk el-
olvasásra az UPGRADING  állományban található fontos információkat.

0. Telepítési igények

    A Python feldolgozó nyelvnek telepítve kell lennie a rendszeren. 
    Jelenleg Python 2.0 vagy újabb szükséges a programhoz. Bõvebb
    információt a Python forráskódjának, vagy RPM csomagjának és 
    lefordított bináris változatának beszerzésérõl a következõ
    oldalon olvashatunk:

        http://www.python.org

    Ezenfelül egy ANSI C fordítóval is rendelkeznünk kell, amelynek 
    segítségével lehet a biztonsági követelményeknek megfelelõ wrapper
    programokat elõállítani. GNU C fordítója, a gcc 2.8.1 vagy ennél
    frissebb megfelel a célnak. A gcc beszerzésérõl bõvebben a 
    következõ oldalon olvashatunk:
    
        http://www.gnu.org

    Mailman 2.1 mûködéséhez szükség van az "email" csomagra, amely a 
    Python 2.2 része. Ha régebbi verziójú Pythont használ, akkor 
    telepítenünk kell ezt a különálló csomagot a következõ módon:

    % cd misc
    % tar zxf email-0.93.tar.gz
    % cd email-0.93
    % python setup.py install

    Az email programcsomag sikeres telepítését a következõképen
    ellenõrizhetjük:

    % python
    Python 2.1.1 (#1, Aug 31 2001, 17:07:00) 
    [GCC egcs-2.91.66 19990314/Linux (egcs-1.1.2 release)] on linux2
    Type "copyright", "credits" or "license" for more information.
    >>> import email
    >>> email.__version__
    '0.93'

    (Megjegyzés: a megjelenõ verziószám Python 2.2 esetén "1.0" lesz; 
    bármelyik verzió megfelelõ.)

1. A rendszer beállítása

    Root jogokkal kell rendelkeznünk a következõ beállítások végre-
    hajtásához.

    A Mailman program telepítése elõtt a rendszerhez kell adni a 
    megfelelõ felhasználót és csoportot.

    - Hozzunk létre egy új felhasználót `mailman' névvel. Ez legtöbbször
      az /etc/passwd állományba kerül bejegyzésre. Ha a `mailman'
      felhasználónév már foglalt, akkor bármilyen más egyedi nevet
      választhatunk, ekkor olvassuk el a --with-ownername kapcsolónál
      található megjegyzést.
     
    - Hozzunk létre egy `mailman' nevû csoportot. Ez legtöbbször az
      /etc/group állományba kerül bejegyzésre. A Mailman állományai
      `mailman' csoport tulajdonában kerülnek telepítésre, set-group-id
      bit jogokkal. Ezzel mind a webes és levelezõprogramok együtt 
      tudnak mûködni. Ha a `mailman' csoportnév már foglalt, akkor 
      bármilyen más egyedi nevet megadhatunk. Ekkor olvassuk el alább
      a --with-ownergroup kapcsolónál található megjegyzést.

    - Hozzunk létre egy könyvtárat, ahová a programot telepíteni fogjuk
      (ezt a továbbiakban $prefix-nek nevezzük). A Mailman összes
      állománya a $prefix-ben megadott könyvtárba fog kerülni.
      A "configure --help" paranccsal a különbözõ telepítési 
      kapcsolókról lehet többet megtudni.

      A Mailman 2.1 alapértelmezett telepítési könyvtára az 
      /usr/local/mailman. Mailman 2.1alpha2-nél régebbi verzióknál ez
      a /home/mailman könyvtár volt. Az alapértelmezett beállítást
      a configure parancs --prefix kapcsolójával lehet megváltoztatni.
      Ha Mailman 2.1alpha2-nél régebbi verziót szeretnénk frissíteni,
      akkor külön meg kell adnunk a --prefix kapcsolót, hacsak nem
      akarjuk a listákat magunktól áthelyezni.
      
      Néhány rendszeren az /usr/local partíción tiltva van a SUID programok
      futtatása. A Mailman rendes mûködéséhez 'set-gid'-es programokat
      használ, ezért ilyen partíciókra nem célszerû telepíteni.
      Ha a rendszer ilyen partícióval rendelkezik, akkor a Mailmant
      olyan könyvtárba kell telepíteni, ahol engedélyezett a setgid
      programok futása.
      
      Gyõzõdjünk meg arról hogy a telepítés könyvtára a `mailman'
      (vagy a --with-ownergroup-nál megadott) csoport tulajdonában
      van és rendelkezik a setgid bit-tel (BSD rendszergazdák olvassák
      el a README.BSD állományt bõvebb információért). A könyvtárat
      ezenfelül mindenki számára elérhetõnek és futtathatóvá kell
      tenni. Ezt pl. a következõ parancsokkal lehet biztosítani:

          % cd $prefix
          % chgrp mailman .
          % chmod a+rx,g+ws .

      Ezek után lehet a Mailmant telepítésre felkészíteni, majd
      telepíteni.

2. configure futtatása

    A --with-mail-gid ÉS --with-cgi-gid KAPCSOLÓKRA VALÓSZÍNÛLEG
    SZÜKSÉGÜNK LESZ EZÉRT OLVASSUK EL A HOZZÁJUK TARTOZÓ LEÍRÁST!

    A következõkben leírt parancsokhoz nem kell root jogokkal 
    rendelkeznünk. A saját bejelentkezési nevünk alatt, vagy azon névvel,
    amellyel általában telepítjük a programokat is végrehajthatjuk a
    következõ parancsokat. Nem szükséges mailman felhasználóként sem
    a lépéseket követni, de akár mailman-ként is dolgozhatunk.

    Fontos, hogy a telepítés könyvtárához legyen írási jogunk, valamint
    setgid beállítási lehetõség (NFS és más köteteket be lehet
    állítani úgy, hogy ne vegyék figyelembe a setgid beállításokat).

    Ha már telepítettünk más GNU programot, akkor a configure szkript
    ismerõs lehet. Általában a program forráskönyvtárában kell
    lépni és a configure parancsot kiadni kapcsolók nélkül:

        % cd mailman-<verzió>
        % ./configure
        % make install

    A következõ kapcsolókkal lehet a Mailman telepítést befolyásolni.

      --prefix=<dir>
            Hagyományos GNU configure kapcsoló, amellyel megadható
	    a könyvtár neve, ahova a Mailmant telepítjük. Alapesetben
	    a $prefix értéke /usr/local/mailman. A könyvtárnak léteznie
	    kell és a fenn leírtaknak megfelelõen beállítva kell
	    lennie.

      --exec-prefix=<dir>
            Hagyományos GNU configure kapcsoló, amellyel a rendszerre
	    jellemzõ lefordított (bináris) állományok telepítési
	    helyét lehet megadni.

      --with-var-prefix=<dir>
            Változó állományok a <dir> könyvtárba kerüljenek és ne
	    a prefix-ben vagy exec_prefix-ben megadottba.

      --with-python=</path/to/python>
            Egyéni Python parancsfeldolgozó elérési útjának megadása
	    a wrapper programok számára. Alapesetben a burok $PATH
	    környezeti változójában legelõször megtalált parancsfel-
	    dolgozó ez. Jó tudni, hogy a szkriptek parancssorbóli
	    futtatásakor mindig a $PATH alapján legelõször megtalált
	    Pyton parancsértelmezõ kerül felhasználásra.

      --with-username=<felhasználónév-vagy-uid>
            Megadja, hogy milyen a `mailman'-tól eltérõ felhasználónév
	    legyen az alapértelmezett. Csak akkor használjuk, ha a
	    `mailman' felhasználónevet már más valaki használja (pl.
	    Mark Ailman bejelenetkezõ neve). Név helyett annak 
	    azonosító számát (user id) is meg lehet adni. Fontos,
	    hogy a $prefix-ben megadott könyvtár az itt megnevezett
	    felhasználó tulajdonában legyen.

      --with-groupname=<csoportnév-vagy-gid>
	    Megadja, hogy milyen a `mailman'-tól eltérõ csoportnév
	    legyen az alapértelmezett. Csak akkor használjuk, ha a
	    `mailman' csoportnév már foglalt. Név helyett annak
	    azonosító számát (group id) is meg lehet adni. Fontos,
	    hogy a $prefix-ben megadott könyvtár az itt megnevezett
	    csoport tulajdonában legyen.

      --with-mail-gid=<csoport-vagy-csoportok>
	    Egyéni csoportot lehet megadni a szkriptek futtatásához
	    a mail wrappernél. <csoport-vagy-csoportok>-nak több
	    csoportazonosító számot vagy csoport nevet is meg lehet
	    adni. A felsoroltak közül a legelsõ, amelyik létezõ
	    csoportot ad meg kerül felhasználásra. Alapesetben a lista
	    értéke `other daemon'.

	    Ez beállítás rendszerenként változik, így minden 
	    rendszeren ellenõrizni kell, mivel a csoport azonosítója
	    biztonsági okok miatt rögzítve lesz a wrappper programban.
	    Sendmail-t használó rendszereken a sendmail.cf állomány
	    "DefaultUser" sora tartalmazza a kívánt azonosítót. 
	    (Ha nincs megadva, csak megjegyzésként feltüntetve 
	    /commented out/, akkor is valószínû a jó értéket mutatja...)

      --with-cgi-gid=<csoport-vagy-csoportok>
	    Egyéni csoportot lehet megadni a szkriptek futtatásához
	    a CGI wrappernél. <csoport-vagy-csoportok>-nak több
	    csoportazonosító számot vagy csoport nevet is meg lehet
	    adni. A felsoroltak közül a legelsõ, amelyik létezõ
	    csoportot ad meg kerül felhasználásra. Alapesetben a lista
	    értéke `www www-data nobody'.

	    A megfelelõ érték web kiszolgálókként eltérõ lehet. Ezért 
	    minden rendszeren ellenõrizni kell az értékét, mert a csoport
	    azonosítója biztonsági okok miatt rögzítve lesz a CGI
	    wrapper programban. Rossz érték esetén egyetlen Mailman
	    CGI szkript sem fog futni.

	    Apache használók a httpd.conf állomány `Group' részénél
	    találják meg a megfelelõ értéket.

      --with-cgi-ext=<kiterjesztés>
	    A cgi-bin programok kiterjesztését lehet vele megadni.
	    A CGI programok a $PREFIX/cgi-bin könyvtárba kerülnek
	    a megadott kiterjesztéssel ellátva (néhány web
	    kiszolgálónál kötelezõ kiterjesztést is megadni).
	    A <kiterjesztés>-ben a pontot is meg kell adni.

      --with-gcc=no
	    Ne használjunk gcc-t még ha az a rendszeren rendelkezésre is
	    áll. A $PATH-ból elérhetõnek kell lennie ilyenkor a `cc'-nek.


3. Telepítés utáni ellenõrzés

    A telepítés után ellenõrizni kell a jogokat és tulajdonosokat,
    ehhez használjuk a check_perms programot:

    - cd $prefix

    - bin/check_perms

    Ne próbáljuk meg a forrás könyvtárból a bin/check_perms programot
    futtatni; az csak a telepített könyvtárban (lásd $prefix) fog
    megfelelõen mûködni.

    Ha a program hiba nélkül fut le, akkor nagy valószínûséggel jól
    van beállítva a telepített Mailman :) Ha hibaüzenetet ír ki, akkor
    a hibát lehet lépésrõl lépésre, újratelepítéssel, vagy a check_perms
    program segítségével (ez a legjobb megoldás) kijavítani:

    - Be kell lépni azon felhasználóként, akivel a telepítés történt
      (és aki tulajdonosa a $prefix-ben található állományoknak), vagy
      rootként kell a következõket végrehajtani:

    - bin/check_perms -f    parancs kiadása

    - Majd ismételgessük az elõzõ lépéseket, amíg a hiba meg nem szûnik!

4. Végsõ beállítások

    Gratulálunk! Sikeresen telepítettük a Mailman programot. A mûködéséhez
    már csak a web részt és levelezõrészt kell a Mailmannal egybehangolni. 

    - Ha található README.<MTA> állomány, ahol az MTA a levelezõ 
      szerverünk (MTA) neve, akkor olvassuk el azt. Egyes MTA-k sokkal jobban
      együtt tudnak mûködni a Mailman-nal, mint mások, így akár weben
      keresztül lehet levelezõlistákat létrehozni vagy megszüntetni.
      Ilyenek pl. az Exim vagy a Postfix. Az egyes MTA-khoz kapcsolódó
      különleges telepítési beállításokról ezekben a README állományokban
      lehet olvasni.
      
    - Ha a levelezõrendszert és web kiszolgálót eltérõ gépeken szeretnénk
      futtatni, a Mailman programot NFS-en megosztani, akkor fontos,
      hogy a gépek rendszerórája egymással szinkronban legyen. A 
      Mailman/LockFile.py állományban a CLOCK_SLOP konstans állítgatásá-
      val a különbözõ rendszerek közötti idõeltérést lehet ellensúlyozni.

    - Állítsuk be a web kiszolgálót, hogy a $prefix/cgi-bin könyvtárban
      található CGI-ket futtassa. Ezt valószínû root-ként kell megtenni.

      A következõkhöz hasonló sort kell majd megadni (a $prefix helyére
      a tényleges könyvtár nevet kell megadni teljes elérési úttal):

          Exec          /mailman/*      $prefix/cgi-bin/*
      vagy:
          ScriptAlias   /mailman/       $prefix/cgi-bin/

      Részletekért olvassuk el a web kiszolgálónk dokumentációját.

    - Fontos meggyõzõdnünk arról, hogy az a felhasználói azonosító, 
      amellyel a CGI fut *nem* tagja-e a `mailman' csoportnak, különben
      a privát archívumot nem lehet majd elérni.

    - A Mailman, Python és GNU logókat másoljuk a web kiszolgáló által
      is elérhetõ könyvtárba. Pl. Apache-nál van egy `icons' könyvtár,
      ahova érdemes a megosztott képeket másolni. A $prefix/icons/mailman.jpg, 
      $prefix/icons/PythonPowered.png, és $prefix/icons/gnu-head-tiny.jpg
      állományokat másoljuk át ide.

      Ezek után a $prefix/Mailman/mm_cfg.py állományban lehet megadni
      a logók elérést. Valahogy így:

      IMAGE_LOGOS = '/images/'

      Az IMAGE_LOGOS alapértelmezett értéke '/icons/'. Bõvebben a 
      Defaults.py-ben lehet róla olvasni.

    - A levelezõlisták nyilvános Pipermail archívumához a web 
      kiszolgálónak a következõt kell megadni:

      Apache-nál például:

         Alias /pipermail/ $varprefix/archives/public/

      ahol $varprefix többnyire a $prefix, ha a configure-nak nem 
      lett külön megadva a --with-var-prefix kapcsoló.

      Részletekért olvassuk el a web kiszolgálónk dokumentációját.
      A kiszolgálót be kell állítani a szimbolikus kötések követésére
      is különben a Pipermail archívumot nem lehet elérni. Apache
      felhasználóknak a FollowSymLinks opciót kell megadniuk.
      
      Ezek után indítsuk újra a web kiszolgálót.

    - A crontab beállítása. A Mailman mûködéséhez számos folyamatot
      kell a cron-nak futtatnia. 2.1alpha2-nél régebbi verziójú
      Mailmannál a program helyes mûkõdéséhez elengedhetetlen volt a
      crontab megfelelõ beállítása. MM2.1alpha2-tõl fogva a qrunner-t
      a bin/mailmanctl szkript futtatja a cron helyett. Ezek ellenére
      azonban a helyes mûködéshez célszerû ezeket a beállításokat is
      elvégezni. Régebbi verziójú Mailman frissítésekor el ne felejtsük
      az új crontab beállításokat elvégezni. Ha egyidejûleg több 
      Mailman-t szeretnénk a rendszerünkön futtatni, akkor ügyeljünk
      a crontab helyes beállítására, mivel a hibás crontab beállítások
      a párhuzamosan mûködõ Mailman-oknál hibához vezethet.

      Ha a crontab támogatja az -u kapcsolót, akkor a következõ lépéseket
      root-ként hajtsuk végre. A $prefix/cron/crontab.in felvételéhez
      a crontab-ba a következõ parancsokat kell végrehajtani:

          % cd $prefix/cron
          % crontab -u mailman crontab.in

      Ha használtuk a --with-ownername kapcsolót, akkor a mailman 
      helyett az ott megadott értéket használjuk az -u kapcsolónál.
      Ha crontab nem támogatja az -u kapcsolót, akkor használjuk a
      következõ parancsokat:

          % cd $prefix/cron
          % su - mailman
          % crontab crontab.in

    - A Mailman qrunner démon futtatásához a következõ parancsot kell
      kiadni a $prefix könyvtárban:

	  % bin/mailmanctl start
      
      Ha azt szeretnénk, hogy minden rendszerindításkor elinduljon a
      program, és az operációs rendszerünk támogatja a chkconfig
      parancsot (pl. RedHat és Mandrake Linux), akkor rootként elég
      a következõ parancsokat kiadni:
      
          % cp misc/mailman /etc/init.d/mailman
          % chkconfig --add mailman

      (Néhány rendszernél az /etc/init.d helyett /etc/rc.d/init.d -t
      kell használni.)

      Azon Unix rendszereknél, amelyek nem támogatják a chkconfig
      programot másoljuk át a misc/mailman állományt az init könyvtárba,
      ahogy azt feljebb mutattuk és hozzuk létre a szimbolikus kötéseket
      rootként a következõ parancsokkal:

          % cp misc/mailman /etc/init.d
          % cd /etc/rc.d/rc0.d
          % ln -s ../init.d/mailman K12mailman
          % cd ../rc1.d
          % ln -s ../init.d/mailman K12mailman
          % cd ../rc2.d
          % ln -s ../init.d/mailman S98mailman
          % cd ../rc3.d
          % ln -s ../init.d/mailman S98mailman
          % cd ../rc4.d
          % ln -s ../init.d/mailman S98mailman
          % cd ../rc5.d
          % ln -s ../init.d/mailman S98mailman
          % cd ../rc6.d
          % ln -s ../init.d/mailman K12mailman
      
    - Hozzuk létre a "központi" levelezõlistát. A jelszó emlékeztetõk
      ennek a listának a címérõl fognak érkezni. A lista neve általában
      "mailman", de igény szerint változtatható a MAILMAN_SITE_LIST
      változó segítségével, amelyet az mm_cfg.py (lásd késõbb) állományban
      kell megadni.

      % bin/newlist mailman

   - Ezek után már fel tudunk iratkozni a mailman levelezõlistára.   
      
5. Mailman finomhangolása

    A következõ beállításokat a 2-es fejezetben tárgyalt felhasználóként
    hajtsuk végre.

    - A $prefix/Mailman/Defaults.py számos beállítást tartalmaz. Ha 
      ezek valamelyikét meg akarjuk változtatni, akkor azt a 
      $prefix/Mailman/mm_cfg.py állományban kell megadni és SOHA SEM
      a Default.py állományban. A Defaults.py-ben minderrõl bõvebben
      lehet olvasni. A listák létrehozása után ezen beállítások meg-
      változtatása nem okoz változást. A listákat az adminisztrációs
      oldalon keresztül, vagy parancssorban a bin/config_list parancs
      segítségével lehet beállítani.

      Ellenõrizzük le, hogy a DEFAULT_HOST_NAME és DEFAULT_URL
      helyesen van-e kitöltve. Az utóbbinak perjellel KELL végzõdnie.

      A telepítés nem írja felül a létezõ mm_cfg.py állományt, így
      abban nyugodtan el lehet helyezni a szükséges beállításokat.

      Fontos: Soha *ne* változtassuk meg a HOME_DIR vagy MAILMAN_DIR
      változók értékét. Ezeket automatikusan a telepítõ állítja be.

      Magyar nyelv ékezetes betûinek helyes megjelenítéséhez az alábbi
      sorokat kell elhelyeznünk az mm_cfg.py állományban:

        DEFAULT_CHARSET='iso-8859-2'
        VERBATIM_ENCODING=['iso-8859-2']

   -  Ha azt szeretnénk, hogy a rendszer alapértelmezett nyelve a
      magyar legyen, akkor adjuk az mm_cfg.py-hez a következõ sort:
      
        DEFAULT_SERVER_LANGUAGE='hu'

    - Rendszerszintû jelszó létrehozása a következõ paranccsal történik:

        % $prefix/bin/mmsitepass <rendszerszintû-jelszó>

      Ezt a jelszót meg lehet adni, mind felhasználó-, mind admin-
      szintû beállítások megváltoztatásánál. A rendszer adminisztrátor
      így képes a listák beállításának módosítására is.

      Itt lehet megadni a rendszerhez használatos "lista létrehozó"
      jelszót is (ezzel lehet majd a rendszerszintû jelszó mellett
      listákat létrehozni és törölni web-felületrõl). A jelszó 
      beállításához a "mmsitepass"-t a -c kapcsolóval kell futtatni.

6. Munka megkezdése

    Lásd a README.hu "ELSÕ SAJÁT LEVELEZÕLISTA LÉTREHOZÁSA" szakaszt egy 
    próba levelezõlista létrehozásához.

7. Problémák
  
    Ha hibát észlelünk a Mailman mûködése során, akkor elõször olvassuk
    el a "Gyakori hibák" részt. Ha ott nem találunk megoldást, akkor 
    nézzük meg a FAQ.hu és FAQ.LINUX állományokat. Ezek után ellenõrizzük
    a naplóállományokban a Mailman bejegyzéseket.

    A naplóállományok helye rendszerenként változik. Lehet az a
    /var/log/maillog, vagy a /var/log/syslog. Számos gépen a napló-
    állományok az /adm/log/ könyvtárban és nem a /var/log könyvtárban
    találhatóak.

    Hiba esetén küldjük el a hiba leírását a mailman-users@python.org 
    címre. Mondjuk el, hogy mit csináltunk a hiba elõtt és hogy mit
    tartalmaznak ezzel kapcsolatban a naplóállományok. Ezen túl adjuk
    meg a gépünk paramétereit és a Python verziószámát.

8. Gyakori hibák

    Hiba: Az összes Mailman oldalra a "404 File not found" üzenetet kapom.

    Megoldás: Nincs megfelelõen beállítva a web kiszolgálója a Mailman
   	      cgi parancsok futtatására. Gyõzõdjünk meg a következõkrõl:
              
	      1) A web kiszolgáló be van állítva a $prefix/cgi-bin
	         futtatására
              2) A web kiszolgáló megfelelõen lett újraindítva.

              Olvassuk el a web kiszolgálónk dokumentációját ezen 
	      módosítások végrehajtásáról.


    Hiba: Az összes Mailman oldal "Internal Server Error" jelez.

    Megoldás: A legvalószínûbb, hogy a CGI szkripteknek rossz GID vagy
              UID lett megadva. Nézzük meg a naplóállományokat. Ha a
              következõ sorhoz hasonlót találunk benne:

                  Attempt to exec script with invalid gid 51, expected 99

              akkor újra kell telepíteni a Mailmant és a $CGI-GID-nek 51-et
              adjunk meg (lásd a telepítés részt feljebb).


    Hiba:     A listára küldött levelem visszajön azzal az üzenettel, hogy 
              a lista nem található!

    Megoldás: Valószínûleg nem lettek a szükséges bejegyzések a rendszer 
              alias adatbázisához adva a newlist parancs futtatása után. Ha
              mégis hozzá lettek adva, akkor valószínû nem lett frissítve az
              adatbázis, vagy nem lett futtatva a newaliases parancs. Ekkor 
              az 5-ös fejezetben tárgyaltak szerint járjunk el.

    Hiba:     A listára küldött levelem visszajön a következõ üzenettel:
              "unknown mailer error".

    Megoldás: A legvalószínûbb, hogy nem megfelelõ GID vagy UID lett megadva
              a levelezõrésznek. Nézzük meg a naplóállományokat. Ha a
              következõhöz hasonlót találunk benne:

                  Attempt to exec script with invalid gid 51, expected 99

              akkor újra kell telepíteni a Mailmant és a $MAIL_GID-nek 51-et
              adjunk meg, ahogy az a telepítési részben le van írva. Postfix
              felhasználók olvassák el a következõ hibát is, amely náluk
	      fordul elõ leggyakrabban.


    Hiba:     MTA-nak Postfixet használok és a mail wrapper programok hibás
              GID-et említenek a naplóállományokban.

    Megoldás: A Postfix main.cf állományában az "alias_maps" változóknál
	      hozzunk létre egy új alias állomány bejegyzést. Ezt az új
              állományt a Mailman könyvtárába, vagy olyan helyre ahol a
              Mailman-nak írási joga is van helyezzük el;
	      *mailman felhasználóként* futtassuk a Postfix "postalias"
              parancsát ezen az állományon.

              % postalias <the alias file>

              Még mindig mailman felhasználóként adjuk ki a következõt:

              % python -c'import os; print os.getgid()' 
              
	      Ezzel megkapjuk azt a csoport azonosító számot, amelyet meg
	      kell adnunk a Mailman telepítésekor a mail wrapper programok
              számára. Legyen ez mondjuk "joGID". Konfiguráljuk újra a 
	      Mailman-t a következõ paranccsal:

              % ./configure --with-mail-gid=joGID


    Hiba:     A listára küldött levelem visszajön a következõ üzenettel:
              "sh: wrapper not available for sendmail programs"

    Megoldás: A rendszer sendmail korlátozott shell-t használ (smrsh). Be
              kell állítani az smrsh-t úgy, hogy egy szimbolikus hivatkozást
              hozunk létre a mail wrapperrõl (%prefix/mail/wrapper) abba
              a könyvtárba, amelyben az engedélyezett smrsh-k futhatnak.

              Ezt a könyvtárat általában a /var/admin/sm.bin, 
              /usr/admin/sm.bin vagy /etc/smrsh helyen találhatjuk.

              Debian Linux alatt a megadott /usr/lib/sm.bin könyvtár
              nem mûködik, ezért hozzuk létre az /usr/admin/sm.bin
              könyvtárat és ide hozzuk létre a szimbolikus hivatkozásokat.

    Hiba:     Összezavarodtam a configure futtatásánál. Hogyan tudom
              törölni a hülyeségeket újratelepítéshez?

    Megoldás: % make clean
              % ./configure --with-a-jó-kapcsolók
              % make install



Local Variables:
mode: indented-text
indent-tabs-mode: nil
End:
