# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR ORGANIZATION
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: Wed Jun 27 16:05:45 2001\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: ENCODING\n"
"Generated-By: pygettext.py 1.3\n"


#. docstring
#: Mailman/Archiver/Archiver.py:18
msgid ""
"Mixin class for putting new messages in the right place for archival.\n"
"\n"
"Public archives are separated from private ones.  An external archival\n"
"mechanism (eg, pipermail) should be pointed to the right places, to do the\n"
"archival.\n"
msgstr ""

#: Mailman/Archiver/Archiver.py:123
msgid "List traffic archival policies."
msgstr ""

#: Mailman/Archiver/Archiver.py:125 Mailman/Autoresponder.py:64
#: Mailman/Autoresponder.py:81 Mailman/Bouncer.py:67 Mailman/Cgi/create.py:293
#: Mailman/Cgi/create.py:314 Mailman/Digester.py:56 Mailman/Digester.py:72
#: Mailman/Digester.py:94 Mailman/Digester.py:99 Mailman/GatewayManager.py:53
#: Mailman/GatewayManager.py:57 Mailman/GatewayManager.py:61
#: Mailman/MailList.py:554 Mailman/MailList.py:564 Mailman/MailList.py:589
#: Mailman/MailList.py:593 Mailman/MailList.py:600 Mailman/MailList.py:610
#: Mailman/MailList.py:615 Mailman/MailList.py:709 Mailman/MailList.py:723
#: Mailman/MailList.py:734 Mailman/MailList.py:737 Mailman/MailList.py:769
#: Mailman/MailList.py:843 Mailman/MailList.py:851
msgid "No"
msgstr ""

#: Mailman/Archiver/Archiver.py:125 Mailman/Autoresponder.py:64
#: Mailman/Bouncer.py:67 Mailman/Cgi/create.py:293 Mailman/Cgi/create.py:314
#: Mailman/Digester.py:56 Mailman/Digester.py:72 Mailman/Digester.py:94
#: Mailman/Digester.py:99 Mailman/GatewayManager.py:53
#: Mailman/GatewayManager.py:57 Mailman/GatewayManager.py:61
#: Mailman/MailList.py:554 Mailman/MailList.py:564 Mailman/MailList.py:589
#: Mailman/MailList.py:593 Mailman/MailList.py:600 Mailman/MailList.py:610
#: Mailman/MailList.py:615 Mailman/MailList.py:709 Mailman/MailList.py:723
#: Mailman/MailList.py:734 Mailman/MailList.py:737 Mailman/MailList.py:769
#: Mailman/MailList.py:843 Mailman/MailList.py:851
msgid "Yes"
msgstr ""

#: Mailman/Archiver/Archiver.py:126
msgid "Archive messages?"
msgstr ""

#: Mailman/Archiver/Archiver.py:128
msgid "private"
msgstr ""

#: Mailman/Archiver/Archiver.py:128
msgid "public"
msgstr ""

#: Mailman/Archiver/Archiver.py:129
msgid "Is archive file source for public or private archival?"
msgstr ""

#: Mailman/Archiver/Archiver.py:132 Mailman/Digester.py:88
msgid "Monthly"
msgstr ""

#: Mailman/Archiver/Archiver.py:132 Mailman/Digester.py:88
msgid "Quarterly"
msgstr ""

#: Mailman/Archiver/Archiver.py:132 Mailman/Digester.py:88
msgid "Yearly"
msgstr ""

#: Mailman/Archiver/Archiver.py:133 Mailman/Digester.py:89
msgid "Daily"
msgstr ""

#: Mailman/Archiver/Archiver.py:133 Mailman/Digester.py:89
msgid "Weekly"
msgstr ""

#: Mailman/Archiver/Archiver.py:135
msgid "How often should a new archive volume be started?"
msgstr ""

#. docstring
#: Mailman/Archiver/Archiver.py:139
msgid "The mbox name where messages are left for archive construction."
msgstr ""

#. docstring
#: Mailman/Archiver/Archiver.py:144
msgid "Open (creating, if necessary) the named archive file."
msgstr ""

#. docstring
#: Mailman/Archiver/Archiver.py:156
msgid "Retain a text copy of the message in an mbox file."
msgstr ""

#. docstring
#: Mailman/Archiver/Archiver.py:180
msgid "Store postings in mbox and/or pipermail archive, depending."
msgstr ""

#. docstring
#: Mailman/Archiver/HyperArch.py:184
msgid ""
"Check From and Subject for encoded-words\n"
"\n"
"        If the email, subject, or author attributes contain non-ASCII\n"
"        characters using the encoded-word syntax of RFC 2047, decoded\n"
"        versions of those attributes are placed in the self.decoded (a\n"
"        dictionary).\n"
"\n"
"        If the charsets used by these headers differ from each other\n"
"        or from the charset specified by the message's Content-Type\n"
"        header, then an arbitrary charset is chosen.  Only those\n"
"        values that match the chosen charset are decoded.\n"
"        "
msgstr ""

#. docstring
#: Mailman/Archiver/HyperArch.py:246 Mailman/Archiver/HyperArch.py:272
msgid "Return the href and subject for the previous message"
msgstr ""

#. docstring
#: Mailman/Archiver/HyperArch.py:260
msgid ""
"Return the subject of art, decoded if possible.\n"
"\n"
"        If the charset of the current message and art match and the\n"
"        article's subject is encoded, decode it.\n"
"        "
msgstr ""

#. docstring
#: Mailman/Archiver/HyperArch.py:289
msgid "Return the message body ready for HTML, decoded if necessary"
msgstr ""

#. docstring
#: Mailman/Archiver/HyperArch.py:323
msgid "Add encoded-word keys to HTML output"
msgstr ""

#. docstring
#: Mailman/Archiver/HyperArch.py:720 Mailman/Archiver/pipermail.py:640
msgid ""
"Return a list of indexes where the article should be filed.\n"
"\tA string can be returned if the list only contains one entry, \n"
"\tand the empty list is legal."
msgstr ""

#. docstring
#: Mailman/Archiver/HyperArch.py:896
msgid ""
"Pick a charset for the index files\n"
"\n"
"        This method choose the most frequently occuring charset in the\n"
"        individual messages.\n"
"\n"
"        XXX There should be an option to set a default charset.\n"
"        "
msgstr ""

#. docstring
#: Mailman/Archiver/HyperDatabase.py:48
msgid ""
"Stores pickles of Article objects\n"
"\n"
"    This dictionary-like object stores pickles of all the Article\n"
"    objects.  The object itself is stored using marshal.  It would be\n"
"    much simpler, and probably faster, to store the actual objects in\n"
"    the DumbBTree and pickle it.\n"
"    \n"
"    TBD: Also needs a more sensible name, like IteratableDictionary or\n"
"    SortedDictionary.\n"
"    "
msgstr ""

#. docstring
#: Mailman/Archiver/pipermail.py:27
msgid "Remove quotes or parenthesization from a Message-ID string"
msgstr ""

#. docstring
#: Mailman/Archiver/pipermail.py:37
msgid "Canonicalize a name into Last, First format"
msgstr ""

#. docstring
#: Mailman/Archiver/pipermail.py:78
msgid ""
"Define the basic sorting logic for a database\n"
"\n"
"    Assumes that the database internally uses dateIndex, authorIndex,\n"
"    etc.\n"
"    "
msgstr ""

#. docstring
#: Mailman/Archiver/pipermail.py:124
msgid "Store article without message body to save space"
msgstr ""

#: Mailman/Archiver/pipermail.py:166 Mailman/Archiver/pipermail.py:167
msgid "No subject"
msgstr ""

#: Mailman/Archiver/pipermail.py:264
msgid "Creating archive directory "
msgstr ""

#: Mailman/Archiver/pipermail.py:276
msgid "Reloading pickled archive state"
msgstr ""

#. docstring
#: Mailman/Archiver/pipermail.py:298
msgid "Close an archive, save its state, and update any changed archives."
msgstr ""

#: Mailman/Archiver/pipermail.py:303
msgid "Pickling archive state into "
msgstr ""

#: Mailman/Archiver/pipermail.py:414
msgid "Updating index files for archive [%(archive)s]"
msgstr ""

#: Mailman/Archiver/pipermail.py:448
msgid "  Thread"
msgstr ""

#: Mailman/Autoresponder.py:48
msgid ""
"Auto-responder characteristics.<p>\n"
"\n"
"In the text fields below, Python %(string)s interpolation is performed with\n"
"the following key/value substitutions:\n"
"<p><ul>\n"
"    <li><b>%(listname)s</b> - <em>gets the name of the mailing list</em>\n"
"    <li><b>%(listurl)s</b> - <em>gets the list's listinfo URL</em>\n"
"    <li><b>%(requestemail)s</b> - <em>gets the list's -request address</em>\n"
"    <li><b>%(adminemail)s</b> - <em>gets the list's -admin address</em>\n"
"    <li><b>%(owneremail)s</b> - <em>gets the list's -owner address</em>\n"
"</ul>\n"
"\n"
"<p>For each text field, you can either enter the text directly into the text\n"
"box, or you can specify a file on your local system to upload as the text."
msgstr ""

#: Mailman/Autoresponder.py:65
msgid ""
"Should Mailman send an auto-response to mailing list\n"
"             posters?"
msgstr ""

#: Mailman/Autoresponder.py:70
msgid "Auto-response text to send to mailing list posters."
msgstr ""

#: Mailman/Autoresponder.py:73
msgid ""
"Should Mailman send an auto-response to emails sent to the\n"
"             -admin and -owner addresses?"
msgstr ""

#: Mailman/Autoresponder.py:78
msgid "Auto-response text to send to -admin and -owner emails."
msgstr ""

#: Mailman/Autoresponder.py:81
msgid "Yes, w/discard"
msgstr ""

#: Mailman/Autoresponder.py:81
msgid "Yes, w/forward"
msgstr ""

#: Mailman/Autoresponder.py:82
msgid ""
"Should Mailman send an auto-response to emails sent to the\n"
"             -request address?  If you choose yes, decide whether you want\n"
"             Mailman to discard the original email, or forward it on to the\n"
"             system as a normal mail command."
msgstr ""

#: Mailman/Autoresponder.py:89
msgid "Auto-response text to send to -request emails."
msgstr ""

#: Mailman/Autoresponder.py:92
msgid ""
"Number of days between auto-responses to either the mailing\n"
"             list or -admin/-owner address from the same poster.  Set to zero\n"
"             (or negative) for no grace period (i.e. auto-respond to every\n"
"             message)."
msgstr ""

#: Mailman/Bouncer.py:63
msgid ""
"Policies regarding systematic processing of bounce messages,\n"
"            to help automate recognition and handling of defunct\n"
"            addresses."
msgstr ""

#: Mailman/Bouncer.py:68
msgid "Try to figure out error messages automatically?"
msgstr ""

#: Mailman/Bouncer.py:71
msgid ""
"Minimum number of days an address has been non-fatally bad\n"
"             before we take action"
msgstr ""

#: Mailman/Bouncer.py:75
msgid ""
"Minimum number of posts to the list since members first\n"
"             bounce before we consider removing them from the list"
msgstr ""

#: Mailman/Bouncer.py:79
msgid ""
"Maximum number of messages your list gets in an hour. (Yes,\n"
"             bounce detection finds this info useful)"
msgstr ""

#: Mailman/Bouncer.py:83
msgid "Do nothing"
msgstr ""

#: Mailman/Bouncer.py:84
msgid "Disable and notify me"
msgstr ""

#: Mailman/Bouncer.py:85
msgid "Disable and DON'T notify me"
msgstr ""

#: Mailman/Bouncer.py:86
msgid "Remove and notify me"
msgstr ""

#: Mailman/Bouncer.py:88
msgid "Action when critical or excessive bounces are detected."
msgstr ""

#. docstring
#: Mailman/Bouncer.py:97
msgid ""
"Detect and handle repeat-offender bounce addresses.\n"
"        \n"
"        We use very sketchy bounce history profiles in self.bounce_info\n"
"        (see comment above it's initialization), together with list-\n"
"        specific thresholds self.minimum_post_count_before_bounce_action\n"
"        and self.max_posts_between_bounces.\n"
"        "
msgstr ""

#. docstring
#: Mailman/Bouncer.py:177
msgid "Disable or remove addr according to bounce_action setting."
msgstr ""

#: Mailman/Bouncer.py:184 Mailman/Bouncer.py:188
msgid "disabled"
msgstr ""

#: Mailman/Bouncer.py:194
msgid "removed"
msgstr ""

#: Mailman/Bouncer.py:199
msgid "not "
msgstr ""

#: Mailman/Bouncer.py:217
msgid "BUT:        %(succeeded)s"
msgstr ""

#: Mailman/Bouncer.py:246
msgid "[original message unavailable]"
msgstr ""

#: Mailman/Bouncer.py:267
msgid "%(rname)s member %(addr)s bouncing - %(negative)s%(did)s"
msgstr ""

#. docstring
#: Mailman/Bouncer.py:274
msgid ""
"Disable delivery for bouncing user address.\n"
"\n"
"        Returning success and notification status.\n"
"        "
msgstr ""

#: Mailman/Bouncer.py:279 Mailman/Bouncer.py:306
msgid "User not found."
msgstr ""

#. docstring
#: Mailman/Bouncer.py:302
msgid ""
"Unsubscribe user with bouncing address.\n"
"\n"
"        Returning success and notification status."
msgstr ""

#. docstring
#: Mailman/Cgi/Auth.py:30
msgid "Exception raised when no matching admin cookie was found."
msgstr ""

#: Mailman/Cgi/Auth.py:46
msgid "Moderator"
msgstr ""

#: Mailman/Cgi/Auth.py:48
msgid "Administrator"
msgstr ""

#: Mailman/Cgi/admin.py:45
msgid "General Options"
msgstr ""

#: Mailman/Cgi/admin.py:46
msgid "Membership Management"
msgstr ""

#: Mailman/Cgi/admin.py:47
msgid "Privacy Options"
msgstr ""

#: Mailman/Cgi/admin.py:48
msgid "Regular delivery (non-digest) Options"
msgstr ""

#: Mailman/Cgi/admin.py:49
msgid "Digest Options"
msgstr ""

#: Mailman/Cgi/admin.py:50
msgid "Bounce Options"
msgstr ""

#: Mailman/Cgi/admin.py:51
msgid "Archival Options"
msgstr ""

#: Mailman/Cgi/admin.py:52
msgid "Mail-News and News-Mail gateways"
msgstr ""

#: Mailman/Cgi/admin.py:53
msgid "Auto-responder"
msgstr ""

#: Mailman/Cgi/admin.py:79 Mailman/Cgi/admindb.py:60 Mailman/Cgi/confirm.py:50
#: Mailman/Cgi/edithtml.py:63 Mailman/Cgi/listinfo.py:49
#: Mailman/Cgi/options.py:64 Mailman/Cgi/private.py:96
#: Mailman/Cgi/rmlist.py:60 Mailman/Cgi/roster.py:55
#: Mailman/Cgi/subscribe.py:56
msgid "No such list <em>%(listname)s</em>"
msgstr ""

#: Mailman/Cgi/admin.py:94 Mailman/Cgi/admindb.py:76
#: Mailman/Cgi/private.py:121
msgid "Authorization failed."
msgstr ""

#: Mailman/Cgi/admin.py:174
msgid ""
"You have turned off delivery of both digest and\n"
"                non-digest messages.  This is an incompatible state of\n"
"                affairs.  You must turn on either digest delivery or\n"
"                non-digest delivery or your mailing list will basically be\n"
"                unusable."
msgstr ""

#: Mailman/Cgi/admin.py:183
msgid ""
"You have digest members, but digests are turned\n"
"                off. Those people will not receive mail."
msgstr ""

#: Mailman/Cgi/admin.py:188
msgid ""
"You have regular list members but non-digestified mail is\n"
"                turned off.  They will receive mail until you fix this\n"
"                problem."
msgstr ""

#: Mailman/Cgi/admin.py:212
msgid "%(hostname)s mailing lists - Admin Links"
msgstr ""

#: Mailman/Cgi/admin.py:234 Mailman/Cgi/listinfo.py:103
msgid "Welcome!"
msgstr ""

#: Mailman/Cgi/admin.py:237 Mailman/Cgi/listinfo.py:106
msgid "Mailman"
msgstr ""

#: Mailman/Cgi/admin.py:241
msgid ""
"<p>There currently are no publicly-advertised %(mailmanlink)s\n"
"            mailing lists on %(hostname)s."
msgstr ""

#: Mailman/Cgi/admin.py:247
msgid ""
"<p>Below is the collection of publicly-advertised\n"
"            %(mailmanlink)s mailing lists on %(hostname)s.  Click on a list\n"
"            name to visit the configuration pages for that list."
msgstr ""

#: Mailman/Cgi/admin.py:254
msgid "right "
msgstr ""

#: Mailman/Cgi/admin.py:256
msgid ""
"To visit the administrators configuration page for an\n"
"        unadvertised list, open a URL similar to this one, but with a '/' and\n"
"        the %(extra)slist name appended.  If you have the proper authority,\n"
"        you can also <a href=\"%(creatorurl)s\">create a new mailing list</a>.\n"
"\n"
"        <p>General list information can be found at "
msgstr ""

#: Mailman/Cgi/admin.py:263
msgid "the mailing list overview page"
msgstr ""

#: Mailman/Cgi/admin.py:265
msgid "<p>(Send questions and comments to "
msgstr ""

#: Mailman/Cgi/admin.py:275 Mailman/Cgi/listinfo.py:138
msgid "List"
msgstr ""

#: Mailman/Cgi/admin.py:276 Mailman/Cgi/admin.py:489
#: Mailman/Cgi/listinfo.py:139
msgid "Description"
msgstr ""

#: Mailman/Cgi/admin.py:282 Mailman/Cgi/listinfo.py:145 bin/list_lists:103
msgid "[no description available]"
msgstr ""

#: Mailman/Cgi/admin.py:312
msgid "No valid variable details request not found: %(path_info)s"
msgstr ""

#: Mailman/Cgi/admin.py:324
msgid ""
"%(realname)s Mailing list Configuration Help\n"
"    <br><em>%(varname)s</em> Option"
msgstr ""

#: Mailman/Cgi/admin.py:331
msgid "Mailman %(varname)s List Option Help"
msgstr ""

#: Mailman/Cgi/admin.py:344
msgid ""
"<em><strong>Warning:</strong> changing this option here\n"
"    could cause other screens to be out-of-sync.  Be sure to reload any other\n"
"    pages that are displaying this option for this mailing list.  You can also\n"
"    "
msgstr ""

#: Mailman/Cgi/admin.py:350
msgid "return to the %(category)s options page."
msgstr ""

#: Mailman/Cgi/admin.py:370
msgid "%(realname)s Administration (%(label)s)"
msgstr ""

#: Mailman/Cgi/admin.py:371
msgid "%(realname)s mailing list administration<br>%(label)s Section"
msgstr ""

#: Mailman/Cgi/admin.py:376
msgid "Configuration Categories"
msgstr ""

#: Mailman/Cgi/admin.py:377
msgid "Other Administrative Activities"
msgstr ""

#: Mailman/Cgi/admin.py:382
msgid "Tend to pending moderator requests"
msgstr ""

#: Mailman/Cgi/admin.py:384
msgid "Go to the general list information page"
msgstr ""

#: Mailman/Cgi/admin.py:386
msgid "Edit the HTML for the public list pages"
msgstr ""

#: Mailman/Cgi/admin.py:388
msgid "Go to list archives"
msgstr ""

#: Mailman/Cgi/admin.py:392
msgid "Delete this mailing list"
msgstr ""

#: Mailman/Cgi/admin.py:399
msgid "Logout"
msgstr ""

#: Mailman/Cgi/admin.py:413 Mailman/Cgi/admin.py:668
msgid "Membership List"
msgstr ""

#: Mailman/Cgi/admin.py:414
msgid "Mass Subscription"
msgstr ""

#: Mailman/Cgi/admin.py:415
msgid "Mass Removal"
msgstr ""

#: Mailman/Cgi/admin.py:446
msgid "  (You can change your password there, too.)"
msgstr ""

#: Mailman/Cgi/admin.py:450
msgid ""
"Make your changes below, and then submit them\n"
"        using the button at the bottom."
msgstr ""

#: Mailman/Cgi/admin.py:490
msgid "Value"
msgstr ""

#: Mailman/Cgi/admin.py:553
msgid ""
"Badly formed options entry:\n"
" %(record)s"
msgstr ""

#. docstring
#: Mailman/Cgi/admin.py:559
msgid "Return a representation of an item's settings."
msgstr ""

#: Mailman/Cgi/admin.py:606
msgid "<em>Enter the text below, or...</em><br>"
msgstr ""

#: Mailman/Cgi/admin.py:608
msgid "<br><em>...specify a file to upload</em><br>"
msgstr ""

#: Mailman/Cgi/admin.py:632
msgid "(Details)"
msgstr ""

#: Mailman/Cgi/admin.py:637
msgid ""
"<br><em><strong>Note:</strong>\n"
"        setting this value performs an immediate action but does not modify\n"
"        permanent state.</em>"
msgstr ""

#: Mailman/Cgi/admin.py:654
msgid "Mass Subscriptions"
msgstr ""

#: Mailman/Cgi/admin.py:661
msgid "Mass Removals"
msgstr ""

#: Mailman/Cgi/admin.py:736
msgid "%(allcnt)s members total, %(membercnt)s shown"
msgstr ""

#: Mailman/Cgi/admin.py:739
msgid "%(allcnt)s members total"
msgstr ""

#: Mailman/Cgi/admin.py:762
msgid "member address<br>member name"
msgstr ""

#: Mailman/Cgi/admin.py:763
msgid "hide"
msgstr ""

#: Mailman/Cgi/admin.py:763
msgid "nomail"
msgstr ""

#: Mailman/Cgi/admin.py:763
msgid "subscr"
msgstr ""

#: Mailman/Cgi/admin.py:764
msgid "ack"
msgstr ""

#: Mailman/Cgi/admin.py:764
msgid "not metoo"
msgstr ""

#: Mailman/Cgi/admin.py:765
msgid "digest"
msgstr ""

#: Mailman/Cgi/admin.py:765
msgid "plain"
msgstr ""

#: Mailman/Cgi/admin.py:766
msgid "language"
msgstr ""

#: Mailman/Cgi/admin.py:819
msgid "<b>subscr</b> -- Is the member subscribed?"
msgstr ""

#: Mailman/Cgi/admin.py:821
msgid ""
"<b>hide</b> -- Is the member's address concealed on\n"
"        the list of subscribers?"
msgstr ""

#: Mailman/Cgi/admin.py:823
msgid "<b>nomail</b> -- Is delivery to the member disabled?"
msgstr ""

#: Mailman/Cgi/admin.py:825
msgid ""
"<b>ack</b> -- Does the member get acknowledgements of their\n"
"        posts?"
msgstr ""

#: Mailman/Cgi/admin.py:828
msgid ""
"<b>not metoo</b> -- Does the member avoid copies of their own\n"
"        posts?"
msgstr ""

#: Mailman/Cgi/admin.py:831
msgid ""
"<b>digest</b> -- Does the member get messages in digests?\n"
"        (otherwise, individual messages)"
msgstr ""

#: Mailman/Cgi/admin.py:834
msgid ""
"<b>plain</b> -- If getting digests, does the member get plain\n"
"        text digests?  (otherwise, MIME)"
msgstr ""

#: Mailman/Cgi/admin.py:836
msgid "<b>language</b> -- Language preferred by the user"
msgstr ""

#: Mailman/Cgi/admin.py:843
msgid ""
"<p><em>To view more members, click on the appropriate\n"
"        range listed below:</em>"
msgstr ""

#: Mailman/Cgi/admin.py:852
msgid "from %(start)s to %(end)s"
msgstr ""

#: Mailman/Cgi/admin.py:858
msgid "Find members by regular expression:"
msgstr ""

#: Mailman/Cgi/admin.py:860
msgid "Search..."
msgstr ""

#: Mailman/Cgi/admin.py:868
msgid "Send welcome message to this batch? "
msgstr ""

#: Mailman/Cgi/admin.py:871 Mailman/Cgi/admin.py:878 Mailman/Cgi/admin.py:896
#: Mailman/Cgi/admin.py:902
msgid " no "
msgstr ""

#: Mailman/Cgi/admin.py:874 Mailman/Cgi/admin.py:881 Mailman/Cgi/admin.py:898
#: Mailman/Cgi/admin.py:905
msgid " yes "
msgstr ""

#: Mailman/Cgi/admin.py:875 Mailman/Cgi/admin.py:899
msgid "Send notifications to the list owner? "
msgstr ""

#: Mailman/Cgi/admin.py:882 Mailman/Cgi/admin.py:906
msgid "Enter one address per line below..."
msgstr ""

#: Mailman/Cgi/admin.py:886 Mailman/Cgi/admin.py:910
msgid "...or specify a file to upload:"
msgstr ""

#: Mailman/Cgi/admin.py:894
msgid "Send unsubscription acknowledgement to the user? "
msgstr ""

#: Mailman/Cgi/admin.py:918
msgid "Change list ownership passwords"
msgstr ""

#: Mailman/Cgi/admin.py:921
msgid ""
"The <em>list administrators</em> are the people who have\n"
"ultimate control over all parameters of this mailing list.  They are able to\n"
"change any list configuration variable available through these administration\n"
"web pages.\n"
"\n"
"<p>The <em>list moderators</em> have more limited permissions; they are not\n"
"able to change any list configuration variable, but they are allowed to tend\n"
"to pending administration requests, including approving or rejecting held\n"
"subscription requests, and disposing of held postings.  Of course, the\n"
"<em>list administrators</em> can also tend to pending requests.\n"
"\n"
"<p>In order to split the list ownership duties into administrators and\n"
"moderators, you must set a separate moderator password in the fields below,\n"
"and also provide the email addresses of the list moderators in the section\n"
"above."
msgstr ""

#: Mailman/Cgi/admin.py:940
msgid "Enter new administrator password:"
msgstr ""

#: Mailman/Cgi/admin.py:942
msgid "Confirm administator password:"
msgstr ""

#: Mailman/Cgi/admin.py:947
msgid "Enter new moderator password:"
msgstr ""

#: Mailman/Cgi/admin.py:949
msgid "Confirm moderator password:"
msgstr ""

#: Mailman/Cgi/admin.py:959
msgid "Submit Your Changes"
msgstr ""

#: Mailman/Cgi/admin.py:1033
msgid "Moderator passwords did not match"
msgstr ""

#: Mailman/Cgi/admin.py:1034 Mailman/Cgi/admin.py:1046
#: Mailman/Cgi/create.py:250 Mailman/Cgi/rmlist.py:183
msgid "Error: "
msgstr ""

#: Mailman/Cgi/admin.py:1045
msgid "Administator passwords did not match"
msgstr ""

#: Mailman/Cgi/admin.py:1099
msgid ""
"<p><b>real_name</b> attribute not\n"
"                    changed!  It must differ from the list's name by case\n"
"                    only.<p>"
msgstr ""

#: Mailman/Cgi/admin.py:1138
msgid "Already a member"
msgstr ""

#: Mailman/Cgi/admin.py:1143
msgid "Bad/Invalid email address"
msgstr ""

#: Mailman/Cgi/admin.py:1146
msgid "Hostile Address (illegal characters)"
msgstr ""

#: Mailman/Cgi/admin.py:1148
msgid "Successfully Subscribed:"
msgstr ""

#: Mailman/Cgi/admin.py:1153
msgid "Error Subscribing:"
msgstr ""

#: Mailman/Cgi/admin.py:1182
msgid "Successfully Unsubscribed:"
msgstr ""

#: Mailman/Cgi/admin.py:1188
msgid "Cannot unsubscribe non-members:"
msgstr ""

#: Mailman/Cgi/admin.py:1208
msgid "Not subscribed"
msgstr ""

#: Mailman/Cgi/admin.py:1231
msgid "Error Unsubscribing:"
msgstr ""

#: Mailman/Cgi/admindb.py:111
msgid "%(realname)s Administrative Database"
msgstr ""

#: Mailman/Cgi/admindb.py:114
msgid "%(realname)s Administrative Database Results"
msgstr ""

#: Mailman/Cgi/admindb.py:131
msgid "Mailman Administrative Database Error"
msgstr ""

#: Mailman/Cgi/admindb.py:136
msgid "list of available mailing lists."
msgstr ""

#: Mailman/Cgi/admindb.py:137
msgid "You must specify a list name.  Here is the %(link)s"
msgstr ""

#: Mailman/Cgi/admindb.py:149
msgid "Administrative requests for mailing list:"
msgstr ""

#: Mailman/Cgi/admindb.py:153
msgid "There are no pending requests."
msgstr ""

#: Mailman/Cgi/admindb.py:166 Mailman/Cgi/admindb.py:202
msgid "Submit All Data"
msgstr ""

#: Mailman/Cgi/admindb.py:171
msgid "Subscription Requests"
msgstr ""

#: Mailman/Cgi/admindb.py:173
msgid "Address"
msgstr ""

#: Mailman/Cgi/admindb.py:174
msgid "Your Decision"
msgstr ""

#: Mailman/Cgi/admindb.py:175
msgid "Reason for refusal"
msgstr ""

#: Mailman/Cgi/admindb.py:180 Mailman/Cgi/admindb.py:280
msgid "Defer"
msgstr ""

#: Mailman/Cgi/admindb.py:181 Mailman/Cgi/admindb.py:280
msgid "Approve"
msgstr ""

#: Mailman/Cgi/admindb.py:182 Mailman/Cgi/admindb.py:280
msgid "Reject"
msgstr ""

#: Mailman/Cgi/admindb.py:183 Mailman/Cgi/admindb.py:280
msgid "Discard"
msgstr ""

#: Mailman/Cgi/admindb.py:216
msgid "Posting Held for Approval"
msgstr ""

#: Mailman/Cgi/admindb.py:218
msgid " (%(count)d of %(total)d)"
msgstr ""

#: Mailman/Cgi/admindb.py:232
msgid "<em>Message with id #%(id)d was lost."
msgstr ""

#: Mailman/Cgi/admindb.py:241
msgid "<em>Message with id #%(id)d is corrupted."
msgstr ""

#: Mailman/Cgi/admindb.py:268
msgid "From:"
msgstr ""

#: Mailman/Cgi/admindb.py:271
msgid "Subject:"
msgstr ""

#: Mailman/Cgi/admindb.py:273
msgid "Reason:"
msgstr ""

#: Mailman/Cgi/admindb.py:286
msgid "Action:"
msgstr ""

#: Mailman/Cgi/admindb.py:290
msgid "Preserve message for site administrator"
msgstr ""

#: Mailman/Cgi/admindb.py:294
msgid "Additionally, forward this message to: "
msgstr ""

#: Mailman/Cgi/admindb.py:299
msgid "If you reject this post,<br>please explain (optional):"
msgstr ""

#: Mailman/Cgi/admindb.py:302
msgid "[No explanation given]"
msgstr ""

#: Mailman/Cgi/admindb.py:307
msgid "Message Headers:"
msgstr ""

#: Mailman/Cgi/admindb.py:312
msgid "Message Excerpt:"
msgstr ""

#: Mailman/Cgi/admindb.py:338 Mailman/ListAdmin.py:236
msgid "[No reason given]"
msgstr ""

#: Mailman/Cgi/admindb.py:361
msgid "Database Updated..."
msgstr ""

#: Mailman/Cgi/admindb.py:364
msgid " is already a member"
msgstr ""

#: Mailman/Cgi/confirm.py:74
msgid ""
"Invalid confirmation string.  Note that\n"
"            confirmation strings expire approximately %(days)s days after the\n"
"            initial subscription request.  If your confirmation has expired,\n"
"            please try to re-submit your subscription."
msgstr ""

#: Mailman/Cgi/confirm.py:87
msgid "Bad confirmation string"
msgstr ""

#: Mailman/Cgi/confirm.py:98
msgid "Subscription request confirmed"
msgstr ""

#: Mailman/Cgi/confirm.py:100
msgid "Removal request confirmed"
msgstr ""

#: Mailman/Cgi/confirm.py:103
msgid "Change of address confirmed"
msgstr ""

#: Mailman/Cgi/confirm.py:111
msgid ""
"        You have successfully confirmed your subscription request for\n"
"        \"%(addr)s\" to the %(listname)s mailing list.  A separate confirmation\n"
"        message will be sent to your email address, along with your password,\n"
"        and other useful information and links."
msgstr ""

#: Mailman/Cgi/confirm.py:117
msgid ""
"        You have successfully confirmed your removal request for \"%(addr)s\" to\n"
"        the %(listname)s mailing list."
msgstr ""

#: Mailman/Cgi/confirm.py:121
msgid ""
"        You have successfully confirmed your change of address to \"%(addr)s\"\n"
"        for the %(listname)s mailing list."
msgstr ""

#: Mailman/Cgi/create.py:47 Mailman/Cgi/rmlist.py:46 Mailman/Cgi/rmlist.py:77
msgid "Bad URL specification"
msgstr ""

#: Mailman/Cgi/create.py:62 Mailman/Cgi/rmlist.py:160
msgid "Return to the "
msgstr ""

#: Mailman/Cgi/create.py:64 Mailman/Cgi/rmlist.py:162
msgid "general list overview"
msgstr ""

#: Mailman/Cgi/create.py:65 Mailman/Cgi/rmlist.py:163
msgid "<br>Return to the "
msgstr ""

#: Mailman/Cgi/create.py:67 Mailman/Cgi/rmlist.py:165
msgid "administrative list overview"
msgstr ""

#: Mailman/Cgi/create.py:90
msgid "List name must not include \"@\": %(listname)s"
msgstr ""

#: Mailman/Cgi/create.py:96 Mailman/Cgi/create.py:165 bin/newlist:123
#: bin/newlist:155
msgid "List already exists: %(listname)s"
msgstr ""

#: Mailman/Cgi/create.py:100
msgid "You forgot to specify the list owner"
msgstr ""

#: Mailman/Cgi/create.py:107
msgid ""
"Leave the initial password (and confirmation) fields\n"
"                blank if you want Mailman to autogenerate the list\n"
"                passwords."
msgstr ""

#: Mailman/Cgi/create.py:115
msgid "Initial list passwords do not match"
msgstr ""

#: Mailman/Cgi/create.py:119 bin/newlist:138
msgid "The list password cannot be empty"
msgstr ""

#: Mailman/Cgi/create.py:131
msgid "You are not authorized to create new mailing lists"
msgstr ""

#: Mailman/Cgi/create.py:161
msgid "Bad owner email address: %(owner)s"
msgstr ""

#: Mailman/Cgi/create.py:170
msgid ""
"Some unknown error occurred while creating the list.\n"
"                Please contact the site administrator for assistance."
msgstr ""

#: Mailman/Cgi/create.py:195 bin/newlist:184
msgid "Your new mailing list: %(listname)s"
msgstr ""

#: Mailman/Cgi/create.py:204
msgid "Mailing list creation results"
msgstr ""

#: Mailman/Cgi/create.py:210
msgid ""
"You have successfully created the mailing list\n"
"        <b>%(listname)s</b> and notification has been sent to the list owner\n"
"        <b>%(owner)s</b>.  You can now:"
msgstr ""

#: Mailman/Cgi/create.py:214
msgid "Visit the list's info page"
msgstr ""

#: Mailman/Cgi/create.py:215
msgid "Visit the list's admin page"
msgstr ""

#: Mailman/Cgi/create.py:216
msgid "Create another list"
msgstr ""

#: Mailman/Cgi/create.py:241
msgid "Create a %(hostname)s Mailing List"
msgstr ""

#: Mailman/Cgi/create.py:252
msgid ""
"You can create a new mailing list by entering the\n"
"    relevant information into the form below.  The name of the mailing list\n"
"    will be used as the primary address for posting messages to the list, so\n"
"    it should be lowercased.  You will not be able to change this once the\n"
"    list is created.\n"
"\n"
"    <p>You also need to enter the email address of the initial list owner.\n"
"    Once the list is created, the list owner will be given notification, along\n"
"    with the initial list password.  The list owner will then be able to\n"
"    modify the password and add or remove additional list owners.\n"
"\n"
"    <p>If you want Mailman to automatically generate the initial list admin\n"
"    password, click on `Yes' in the autogenerate field below, and leave the\n"
"    initial list password fields empty.\n"
"\n"
"    <p>You must have the proper authorization to create new mailing lists.\n"
"    Each site should have a <em>list creator's</em> password, which you can\n"
"    enter in the field at the bottom.  Note that the site administrator's\n"
"    password can also be used for authentication.\n"
"    "
msgstr ""

#: Mailman/Cgi/create.py:278
msgid "Name of list:"
msgstr ""

#: Mailman/Cgi/create.py:283
msgid "Initial list owner address:"
msgstr ""

#: Mailman/Cgi/create.py:292
msgid "Auto-generate initial list password?"
msgstr ""

#: Mailman/Cgi/create.py:299
msgid "Initial list password:"
msgstr ""

#: Mailman/Cgi/create.py:304
msgid "Confirm initial password:"
msgstr ""

#: Mailman/Cgi/create.py:313
msgid "Send \"list created\" email to list owner?"
msgstr ""

#: Mailman/Cgi/create.py:322
msgid "List creator's (authentication) password:"
msgstr ""

#: Mailman/Cgi/create.py:327
msgid "Create List"
msgstr ""

#: Mailman/Cgi/create.py:328
msgid "Clear Form"
msgstr ""

#: Mailman/Cgi/edithtml.py:40
msgid "General list information page"
msgstr ""

#: Mailman/Cgi/edithtml.py:41
msgid "Subscribe results page"
msgstr ""

#: Mailman/Cgi/edithtml.py:42
msgid "User specific options page"
msgstr ""

#: Mailman/Cgi/edithtml.py:43
msgid "Changing user options results page"
msgstr ""

#: Mailman/Cgi/edithtml.py:55
msgid "List name is required."
msgstr ""

#: Mailman/Cgi/edithtml.py:86
msgid "%(realname)s -- Edit html for %(template_info)s"
msgstr ""

#: Mailman/Cgi/edithtml.py:90
msgid "Edit HTML : Error"
msgstr ""

#: Mailman/Cgi/edithtml.py:91
msgid "%(template_name)s: Invalid template"
msgstr ""

#: Mailman/Cgi/edithtml.py:96 Mailman/Cgi/edithtml.py:97
msgid "%(realname)s -- HTML Page Editing"
msgstr ""

#: Mailman/Cgi/edithtml.py:98
msgid "Select page to edit:"
msgstr ""

#: Mailman/Cgi/edithtml.py:124
msgid "View or edit the list configuration information."
msgstr ""

#: Mailman/Cgi/edithtml.py:133
msgid "When you are done making changes..."
msgstr ""

#: Mailman/Cgi/edithtml.py:134
msgid "Submit Changes"
msgstr ""

#: Mailman/Cgi/edithtml.py:141
msgid "Can't have empty html page."
msgstr ""

#: Mailman/Cgi/edithtml.py:142
msgid "HTML Unchanged."
msgstr ""

#: Mailman/Cgi/edithtml.py:150
msgid "HTML successfully updated."
msgstr ""

#: Mailman/Cgi/listinfo.py:75
msgid "%(hostname)s Mailing Lists"
msgstr ""

#: Mailman/Cgi/listinfo.py:109
msgid ""
"<p>There currently are no publicly-advertised\n"
"            %(mailmanlink)s mailing lists on %(hostname)s."
msgstr ""

#: Mailman/Cgi/listinfo.py:113
msgid ""
"<p>Below is a listing of all the public mailing lists on\n"
"            %(hostname)s.  Click on a list name to get more information about\n"
"            the list, or to subscribe, unsubscribe, and change the preferences\n"
"            on your subscription."
msgstr ""

#: Mailman/Cgi/listinfo.py:119
msgid "right"
msgstr ""

#: Mailman/Cgi/listinfo.py:121
msgid ""
" To visit the info page for an unadvertised list,\n"
"        a URL similar to this one, but with a '/' and the %(adj)s\n"
"        list name appended.\n"
"        <p>List administrators, you can visit "
msgstr ""

#: Mailman/Cgi/listinfo.py:126
msgid "the list admin overview page"
msgstr ""

#: Mailman/Cgi/listinfo.py:127
msgid ""
" to find the management interface for your list.\n"
"         <p>Send questions or comments to "
msgstr ""

#: Mailman/Cgi/listinfo.py:177
msgid "Subscribe"
msgstr ""

#: Mailman/Cgi/listinfo.py:185 Mailman/HTMLFormatter.py:238
msgid "Edit Options"
msgstr ""

#: Mailman/Cgi/listinfo.py:188 Mailman/Cgi/roster.py:109
msgid "View this page in"
msgstr ""

#: Mailman/Cgi/options.py:46 Mailman/Cgi/options.py:61
#: Mailman/Cgi/options.py:81
msgid "CGI script error"
msgstr ""

#: Mailman/Cgi/options.py:49
msgid "Invalid options to CGI script."
msgstr ""

#: Mailman/Cgi/options.py:86
msgid "List \"%(realname)s\" has no such member: %(user)s."
msgstr ""

#: Mailman/Cgi/options.py:111
msgid "The confirmation email has been sent."
msgstr ""

#: Mailman/Cgi/options.py:122 Mailman/Cgi/options.py:159
msgid "A reminder of your password has been emailed to you."
msgstr ""

#: Mailman/Cgi/options.py:139
msgid "Authentication failed."
msgstr ""

#: Mailman/Cgi/options.py:165
msgid "List subscriptions for %(user)s on %(hostname)s"
msgstr ""

#: Mailman/Cgi/options.py:168
msgid ""
"Click on a link to visit your options page for the\n"
"        requested mailing list."
msgstr ""

#: Mailman/Cgi/options.py:189
msgid "Addresses may not be blank"
msgstr ""

#: Mailman/Cgi/options.py:194
msgid "Addresses did not match!"
msgstr ""

#: Mailman/Cgi/options.py:207
msgid "A confirmation message has been sent to %(newaddr)s"
msgstr ""

#: Mailman/Cgi/options.py:217
msgid "Bad email address provided"
msgstr ""

#: Mailman/Cgi/options.py:219
msgid "Illegal email address provided"
msgstr ""

#: Mailman/Cgi/options.py:221
msgid "%(newaddr)s is already a member of the list."
msgstr ""

#: Mailman/Cgi/options.py:232
msgid "Passwords may not be blank"
msgstr ""

#: Mailman/Cgi/options.py:237
msgid "Passwords did not match!"
msgstr ""

#: Mailman/Cgi/options.py:253
msgid "Password successfully changed."
msgstr ""

#: Mailman/Cgi/options.py:262
msgid ""
"You must confirm your unsubscription request by turning\n"
"                on the checkbox below the <em>Unsubscribe</em> button.  You\n"
"                have not been unsubscribed!"
msgstr ""

#: Mailman/Cgi/options.py:279
msgid "via the member options page"
msgstr ""

#: Mailman/Cgi/options.py:290
msgid "Unsubscription results"
msgstr ""

#: Mailman/Cgi/options.py:293
msgid ""
"You have been successfully unsubscribed from the\n"
"        mailing list %(fqdn_listname)s.  If you were receiving digest\n"
"        deliveries you may get one more digest.  If you have any questions\n"
"        about your unsubscription, please contact the list owners at\n"
"        %(owneraddr)s."
msgstr ""

#: Mailman/Cgi/options.py:398
msgid ""
"The list administrator has disabled digest delivery for\n"
"            this list, so your delivery option has not been set.  However your\n"
"            other options have been set successfully."
msgstr ""

#: Mailman/Cgi/options.py:402
msgid ""
"The list administrator has disabled non-digest delivery\n"
"            for this list, so your delivery option has not been set.  However\n"
"            your other options have been set successfully."
msgstr ""

#: Mailman/Cgi/options.py:406
msgid "You have successfully set your options."
msgstr ""

#: Mailman/Cgi/options.py:409
msgid "You may get one last digest."
msgstr ""

#: Mailman/Cgi/options.py:466 Mailman/Cgi/options.py:560
#: Mailman/Cgi/options.py:570
msgid "Unsubscribe"
msgstr ""

#: Mailman/Cgi/options.py:468
msgid "<em>Yes, I really want to unsubscribe</em>"
msgstr ""

#: Mailman/Cgi/options.py:472
msgid "Change My Password"
msgstr ""

#: Mailman/Cgi/options.py:475
msgid "List my other subscriptions"
msgstr ""

#: Mailman/Cgi/options.py:481
msgid "Email My Password To Me"
msgstr ""

#: Mailman/Cgi/options.py:483
msgid "password"
msgstr ""

#: Mailman/Cgi/options.py:485
msgid "Log out"
msgstr ""

#: Mailman/Cgi/options.py:487
msgid "Submit My Changes"
msgstr ""

#: Mailman/Cgi/options.py:497
msgid "days"
msgstr ""

#: Mailman/Cgi/options.py:499
msgid "day"
msgstr ""

#: Mailman/Cgi/options.py:500
msgid "%(days)d %(units)s"
msgstr ""

#: Mailman/Cgi/options.py:506
msgid "Change My Address"
msgstr ""

#: Mailman/Cgi/options.py:511
msgid ""
"\n"
"You are subscribed to this list with the case-preserved address\n"
"<em>%(cpuser)s</em>."
msgstr ""

#: Mailman/Cgi/options.py:528
msgid "%(realname)s list: member options for user %(user)s"
msgstr ""

#: Mailman/Cgi/options.py:534
msgid ""
"In order to change your membership option, you must\n"
"    first log in by giving your membership password in the section below.  If\n"
"    you don't remember your membership password, you can have it emailed to\n"
"    you by clicking on the button below.  If you just want to unsubscribe from\n"
"    this list, click on the <em>Unsubscribe</em> button and a confirmation\n"
"    message will be sent to you.\n"
"\n"
"    <p><strong><em>Important:</em></strong> From this point on, you must have\n"
"    cookies enabled in your browser, otherwise none of your changes will take\n"
"    effect.\n"
"\n"
"    <p>Session cookies are used in Mailman's membership options interface so\n"
"    that you don't need to re-authenticate with every operation.  This cookie\n"
"    will expire automatically when you exit your browser, or you can\n"
"    explicitly expire the cookie by hitting the <em>Logout</em> link (which\n"
"    you'll see once you successfully log in).\n"
"    "
msgstr ""

#: Mailman/Cgi/options.py:553
msgid "Password:"
msgstr ""

#: Mailman/Cgi/options.py:555
msgid "Log in"
msgstr ""

#: Mailman/Cgi/options.py:564
msgid ""
"By clicking on the <em>Unsubscribe</em> button, a\n"
"        confirmation message will be emailed to you.  This message will have a\n"
"        link that you should click on to complete the removal process (you can\n"
"        also confirm by email; see the instructions in the confirmation\n"
"        message)."
msgstr ""

#: Mailman/Cgi/options.py:574
msgid "Password reminder"
msgstr ""

#: Mailman/Cgi/options.py:578
msgid ""
"By clicking on the <em>Remind</em> button, your\n"
"        password will be emailed to you."
msgstr ""

#: Mailman/Cgi/options.py:581
msgid "Remind"
msgstr ""

#. docstring
#: Mailman/Cgi/private.py:41
msgid "Ensure that the path is safe by removing .."
msgstr ""

#: Mailman/Cgi/private.py:62
msgid "Private Archive Error"
msgstr ""

#: Mailman/Cgi/private.py:63
msgid "You must specify a list."
msgstr ""

#: Mailman/Cgi/private.py:97
msgid "Private Archive Error - %(msg)s"
msgstr ""

#: Mailman/Cgi/private.py:155
msgid "Archive File Not Found"
msgstr ""

#: Mailman/Cgi/private.py:156
msgid "No file"
msgstr ""

#: Mailman/Cgi/rmlist.py:88
msgid "You're being a sneaky list owner!"
msgstr ""

#: Mailman/Cgi/rmlist.py:124
msgid "You are not authorized to delete this mailing list"
msgstr ""

#: Mailman/Cgi/rmlist.py:150
msgid "Mailing list deletion results"
msgstr ""

#: Mailman/Cgi/rmlist.py:156
msgid ""
"You have successfully deleted the mailing list\n"
"    <b>%(listname)s</b>."
msgstr ""

#: Mailman/Cgi/rmlist.py:172
msgid "Permanently remove mailing list <em>%(realname)s</em>"
msgstr ""

#: Mailman/Cgi/rmlist.py:186
msgid ""
"This page allows you as the list owner, to permanent\n"
"    remove this mailing list from the system.  <strong>This action is not\n"
"    undoable</strong> so you should undertake it only if you are absolutely\n"
"    sure this mailing list has served its purpose and is no longer necessary.\n"
"\n"
"    <p>Note that no warning will be sent to your list members and after this\n"
"    action, any subsequent messages sent to the mailing list, or any of its\n"
"    administrative addreses will bounce.\n"
"\n"
"    <p>You also have the option of removing the archives for this mailing list\n"
"    at this time.  It is almost always recommended that you do\n"
"    <strong>not</strong> remove the archives, since they serve as the\n"
"    historical record of your mailing list.\n"
"\n"
"    <p>For your safety, you will be asked to reconfirm the list password.\n"
"    "
msgstr ""

#: Mailman/Cgi/rmlist.py:207
msgid "List password:"
msgstr ""

#: Mailman/Cgi/rmlist.py:211
msgid "Also delete archives?"
msgstr ""

#: Mailman/Cgi/rmlist.py:219
msgid "<b>Cancel</b> and return to list administration"
msgstr ""

#: Mailman/Cgi/rmlist.py:222
msgid "Delete this list"
msgstr ""

#: Mailman/Cgi/roster.py:48 Mailman/Cgi/subscribe.py:47
msgid "Invalid options to CGI script"
msgstr ""

#: Mailman/Cgi/roster.py:97
msgid "%(realname)s roster authentication failed."
msgstr ""

#: Mailman/Cgi/roster.py:125 Mailman/Cgi/roster.py:126
#: Mailman/Cgi/subscribe.py:46 Mailman/Cgi/subscribe.py:55
#: Mailman/Cgi/subscribe.py:124 Mailman/Cgi/subscribe.py:134
msgid "Error"
msgstr ""

#. docstring
#: Mailman/Cgi/subscribe.py:101
msgid "A hack to call one of the other CGI scripts."
msgstr ""

#: Mailman/Cgi/subscribe.py:125
msgid "You must supply your email address."
msgstr ""

#: Mailman/Cgi/subscribe.py:136
msgid "%(realname)s has no subscribed addr <i>%(addr)s</i>."
msgstr ""

#: Mailman/Cgi/subscribe.py:147
msgid "You must supply a valid email address.<br>"
msgstr ""

#: Mailman/Cgi/subscribe.py:158
msgid "Web site "
msgstr ""

#: Mailman/Cgi/subscribe.py:160
msgid "unidentified origin"
msgstr ""

#: Mailman/Cgi/subscribe.py:163
msgid "You must not subscribe a list to itself!<br>"
msgstr ""

#: Mailman/Cgi/subscribe.py:179
msgid "If you supply a password, you must confirm it.<br>"
msgstr ""

#: Mailman/Cgi/subscribe.py:182
msgid "Your passwords did not match.<br>"
msgstr ""

#: Mailman/Cgi/subscribe.py:210
msgid "Mailman won't accept the given email address as a valid address. (Does it have an @ in it???)<p>"
msgstr ""

#: Mailman/Cgi/subscribe.py:214
msgid "The list is not fully functional, and can not accept subscription requests.<p>"
msgstr ""

#: Mailman/Cgi/subscribe.py:217
msgid "Confirmation from your email address is required, to prevent anyone from subscribing you without permission. Instructions are being sent to you at %(email)s. Please note your subscription will not start until you confirm your subscription."
msgstr ""

#: Mailman/Cgi/subscribe.py:229
msgid "Subscription was <em>deferred</em> because %(x)s.  Your request has been forwarded to the list administrator.  You will receive email informing you of the moderator's decision when they get to your request.<p>"
msgstr ""

#: Mailman/Cgi/subscribe.py:236
msgid "Your subscription is not allowed because the email address you gave is insecure.<p>"
msgstr ""

#: Mailman/Cgi/subscribe.py:239
msgid "You are already subscribed!<p>"
msgstr ""

#: Mailman/Cgi/subscribe.py:245 Mailman/MailCommandHandler.py:670
msgid "No one can subscribe to the digest of this list!"
msgstr ""

#: Mailman/Cgi/subscribe.py:247 Mailman/MailCommandHandler.py:672
msgid "This list only supports digest subscriptions!"
msgstr ""

#: Mailman/Cgi/subscribe.py:250
msgid "You have been successfully subscribed to %(rname)s."
msgstr ""

#. docstring
#: Mailman/Cgi/subscribe.py:271
msgid "Try to return the remote addr, or if unavailable, None."
msgstr ""

#: Mailman/Defaults.py:746
msgid "Spanish (Spain)"
msgstr ""

#: Mailman/Defaults.py:747
msgid "Italian"
msgstr ""

#: Mailman/Defaults.py:748
msgid "English (USA)"
msgstr ""

#: Mailman/Deliverer.py:41
msgid ""
"Note: Since this is a list of mailing lists, administrative\n"
"notices like the password reminder will be sent to\n"
"your membership administrative address, %(addr)s."
msgstr ""

#: Mailman/Deliverer.py:60
msgid " (Digest mode)"
msgstr ""

#: Mailman/Deliverer.py:66
msgid "Welcome to the \"%(realname)s\" mailing list%(digmode)s"
msgstr ""

#: Mailman/Deliverer.py:76
msgid "Unsubscribed from \"%(realname)s\" mailing list"
msgstr ""

#: Mailman/Deliverer.py:90
msgid "%(listfullname)s mailing list reminder"
msgstr ""

#: Mailman/Deliverer.py:106
msgid "%(listfullname)s user %(user)s missing password!"
msgstr ""

#: Mailman/Digester.py:54
msgid "Batched-delivery digest characteristics."
msgstr ""

#: Mailman/Digester.py:57
msgid "Can list members choose to receive list traffic bunched in digests?"
msgstr ""

#: Mailman/Digester.py:61
msgid "Digest"
msgstr ""

#: Mailman/Digester.py:61
msgid "Regular"
msgstr ""

#: Mailman/Digester.py:62
msgid "Which delivery mode is the default for new users?"
msgstr ""

#: Mailman/Digester.py:65
msgid "MIME"
msgstr ""

#: Mailman/Digester.py:65
msgid "Plain"
msgstr ""

#: Mailman/Digester.py:66
msgid "When receiving digests, which format is default?"
msgstr ""

#: Mailman/Digester.py:69
msgid "How big in Kb should a digest be before it gets sent out?"
msgstr ""

#: Mailman/Digester.py:73
msgid "Should a digest be dispatched daily when the size threshold isn't reached?"
msgstr ""

#: Mailman/Digester.py:77
msgid "Header added to every digest"
msgstr ""

#: Mailman/Digester.py:78
msgid "Text attached (as an initial message, before the table of contents) to the top of digests. "
msgstr ""

#: Mailman/Digester.py:83
msgid "Footer added to every digest"
msgstr ""

#: Mailman/Digester.py:84
msgid "Text attached (as a final message) to the bottom of digests. "
msgstr ""

#: Mailman/Digester.py:90
msgid "How often should a new digest volume be started?"
msgstr ""

#: Mailman/Digester.py:91
msgid ""
"When a new digest volume is started, the volume number is\n"
"             incremented and the issue number is reset to 1."
msgstr ""

#: Mailman/Digester.py:95
msgid "Should Mailman start a new digest volume?"
msgstr ""

#: Mailman/Digester.py:96
msgid ""
"Setting this option instructs Mailman to start a new volume\n"
"             with the next digest sent out."
msgstr ""

#: Mailman/Digester.py:100
msgid ""
"Should Mailman send the next digest right now, if it is not\n"
"             empty?"
msgstr ""

#. docstring
#: Mailman/EncWord.py:33
msgid "Decode mail header encoded-word format defined by RFC 2047"
msgstr ""

#. docstring
#: Mailman/EncWord.py:38
msgid ""
"Decode an encoded-word.\n"
"\n"
"        Returns the charset of the encoded-word, the decoded text, and the\n"
"        position of the first character following the encoded-word.\n"
"\n"
"        The first position of the input string must by the first character of\n"
"        the encoded-word.\n"
"        "
msgstr ""

#. docstring
#: Mailman/EncWord.py:91
msgid "Q encoding defined by RFC 2047"
msgstr ""

#. docstring
#: Mailman/EncWord.py:113
msgid "B encoding == base64 encoding defined by RFC 2045"
msgstr ""

#. docstring
#: Mailman/EncWord.py:119
msgid "Decode a string containing encoded words"
msgstr ""

#. docstring
#: Mailman/Errors.py:67
msgid "Base class for all Mailman exceptions."
msgstr ""

#. docstring
#: Mailman/Errors.py:72
msgid "Post already went through this list!"
msgstr ""

#. docstring
#: Mailman/Errors.py:79
msgid "Base class for email address validation errors."
msgstr ""

#. docstring
#: Mailman/Errors.py:83
msgid "Email address is invalid (empty string or not fully qualified)."
msgstr ""

#. docstring
#: Mailman/Errors.py:87
msgid "Email address has potentially hostile characters in it."
msgstr ""

#. docstring
#: Mailman/Errors.py:93
msgid "Held message was lost."
msgstr ""

#. docstring
#: Mailman/Errors.py:100
msgid "Base class for all handler errors."
msgstr ""

#. docstring
#: Mailman/Errors.py:103
msgid "Base class for all message-being-held short circuits."
msgstr ""

#: Mailman/Errors.py:108
msgid "Your message was rejected"
msgstr ""

#. docstring
#: Mailman/Errors.py:114
msgid "The message can be discarded with no further action"
msgstr ""

#. docstring
#: Mailman/Errors.py:117
msgid "Delivery to some or all recipients failed"
msgstr ""

#. docstring
#: Mailman/Errors.py:125
msgid "We've seen this message before"
msgstr ""

#: Mailman/GatewayManager.py:40
msgid "Mail-to-News and News-to-Mail gateway services."
msgstr ""

#: Mailman/GatewayManager.py:43
msgid ""
"The Internet address of the machine your News server is\n"
"             running on."
msgstr ""

#: Mailman/GatewayManager.py:45
msgid ""
"The News server is not part of Mailman proper.  You have to\n"
"             already have access to a NNTP server, and that NNTP server has to\n"
"             recognize the machine this mailing list runs on as a machine\n"
"             capable of reading and posting news."
msgstr ""

#: Mailman/GatewayManager.py:51
msgid "The name of the Usenet group to gateway to and/or from."
msgstr ""

#: Mailman/GatewayManager.py:54
msgid ""
"Should new posts to the mailing list be sent to the\n"
"             newsgroup?"
msgstr ""

#: Mailman/GatewayManager.py:58
msgid ""
"Should new posts to the newsgroup be sent to the mailing\n"
"             list?"
msgstr ""

#: Mailman/GatewayManager.py:62
msgid "Should Mailman perform a <em>catchup</em> on the newsgroup?"
msgstr ""

#: Mailman/GatewayManager.py:63
msgid ""
"When you tell Mailman to perform a catchup on the newsgroup,\n"
"             this means that you want to start gating messages to the mailing\n"
"             list with the next new message found.  All earlier messages on\n"
"             the newsgroup will be ignored.  This is as if you were reading\n"
"             the newsgroup yourself, and you marked all current messages as\n"
"             <em>read</em>.  By catching up, your mailing list members will\n"
"             not see any of the earlier messages."
msgstr ""

#: Mailman/HTMLFormatter.py:51
msgid " list run by "
msgstr ""

#: Mailman/HTMLFormatter.py:54
msgid "%(realname)s administrative interface"
msgstr ""

#: Mailman/HTMLFormatter.py:55
msgid " (requires authorization)"
msgstr ""

#: Mailman/HTMLFormatter.py:78
msgid "<em>(%(num_concealed)d private member%(plu)s not shown)</em>"
msgstr ""

#: Mailman/HTMLFormatter.py:128
msgid "Note: your list delivery is currently disabled."
msgstr ""

#: Mailman/HTMLFormatter.py:130
msgid "Mail delivery"
msgstr ""

#: Mailman/HTMLFormatter.py:132 Mailman/HTMLFormatter.py:273
msgid "the list administrator"
msgstr ""

#: Mailman/HTMLFormatter.py:133
msgid ""
"<p>%(note)s\n"
"\n"
"            <p>You may have disabled list delivery intentionally,\n"
"            or it may have been triggered by bounces from your email\n"
"            address.  In either case, to re-enable delivery, change the\n"
"            %(link)s option below.  Contact %(mailto)s if you have any\n"
"            questions or need assistance."
msgstr ""

#: Mailman/HTMLFormatter.py:146
msgid "(Note - you are subscribing to a list of mailing lists, so the %(type)s notice will be sent to the admin address for your membership, %(addr)s.)<p>"
msgstr ""

#. docstring
#: Mailman/HTMLFormatter.py:153
msgid "Tailor to approval, roster privacy, and web vetting requirements."
msgstr ""

#: Mailman/HTMLFormatter.py:157
msgid "You will be sent email requesting confirmation, to prevent others from gratuitously subscribing you.  "
msgstr ""

#: Mailman/HTMLFormatter.py:161
msgid "This is a closed list, which means your subscription will be held for approval.  You will be notified of the administrator's decision by email.  "
msgstr ""

#: Mailman/HTMLFormatter.py:165 Mailman/HTMLFormatter.py:173
msgid "also "
msgstr ""

#: Mailman/HTMLFormatter.py:167
msgid "You will be sent email requesting confirmation, to prevent others from gratuitously subscribing you.  Once confirmation is received, your request will be held for approval by the list administrator.  You will be notified of the administrator's decision by email.  "
msgstr ""

#: Mailman/HTMLFormatter.py:175
msgid "This is %(also)sa private list, which means that the members list is not available to non-members.  "
msgstr ""

#: Mailman/HTMLFormatter.py:179
msgid "This is %(also)sa hidden list, which means that the members list is available only to the list administrator.  "
msgstr ""

#: Mailman/HTMLFormatter.py:183
msgid "This is %(also)sa public list, which means that the members list is openly available"
msgstr ""

#: Mailman/HTMLFormatter.py:186
msgid " (but we obscure the addresses so they are not easily recognizable by spammers).  "
msgstr ""

#: Mailman/HTMLFormatter.py:193
msgid "<p>(Note that this is an umbrella list, intended to have only other mailing lists as members.  Among other things, this means that your confirmation request will be sent to the '%(sfx)s' account for your address.)"
msgstr ""

#. docstring
#: Mailman/HTMLFormatter.py:222
msgid "Present editing options, according to list privacy."
msgstr ""

#: Mailman/HTMLFormatter.py:225
msgid "<b><i>either</i></b> "
msgstr ""

#: Mailman/HTMLFormatter.py:230
msgid ""
"To change your subscription (set options like digest\n"
"        and delivery modes, get a reminder of your password, or unsubscribe\n"
"        from %(realname)s) %(either)senter your subscription email address:\n"
"        <p><center> "
msgstr ""

#: Mailman/HTMLFormatter.py:241
msgid "<p>... <b><i>or</i></b> select your entry from  the subscribers list (see above)."
msgstr ""

#: Mailman/HTMLFormatter.py:249
msgid ""
"(<i>The %(which)s is only available to the list\n"
"                members.</i>)"
msgstr ""

#: Mailman/HTMLFormatter.py:253
msgid ""
"(<i>The %(which)s is only available to the list\n"
"            administrator.</i>)"
msgstr ""

#. docstring
#: Mailman/HTMLFormatter.py:260
msgid "Provide avenue to subscribers roster, contingent to .private_roster."
msgstr ""

#: Mailman/HTMLFormatter.py:263
msgid "Click here for the list of "
msgstr ""

#: Mailman/HTMLFormatter.py:265
msgid " subscribers: "
msgstr ""

#: Mailman/HTMLFormatter.py:267
msgid "Visit Subscriber list"
msgstr ""

#: Mailman/HTMLFormatter.py:270
msgid "members"
msgstr ""

#: Mailman/HTMLFormatter.py:271
msgid "Address:"
msgstr ""

#: Mailman/HTMLFormatter.py:274
msgid "Admin address:"
msgstr ""

#: Mailman/HTMLFormatter.py:276
msgid "subscribers list"
msgstr ""

#: Mailman/HTMLFormatter.py:278
msgid " <p>Enter your "
msgstr ""

#: Mailman/HTMLFormatter.py:280
msgid " and password to visit  the subscribers list: <p><center> "
msgstr ""

#: Mailman/HTMLFormatter.py:285
msgid "Password: "
msgstr ""

#: Mailman/HTMLFormatter.py:289
msgid "Visit Subscriber List"
msgstr ""

#: Mailman/HTMLFormatter.py:318
msgid "Once a month, your password will be emailed to you as a reminder."
msgstr ""

#: Mailman/HTMLFormatter.py:360
msgid "current archive"
msgstr ""

#. docstring
#: Mailman/HTMLFormatter.py:375
msgid ""
"\n"
"        returns standard replaces plus formatted user lists in\n"
"        a dict just like GetStandardReplacements.\n"
"        "
msgstr ""

#: Mailman/Handlers/Acknowledge.py:57
msgid "%(realname)s post acknowledgement"
msgstr ""

#: Mailman/Handlers/CookHeaders.py:53 Mailman/Handlers/Hold.py:239
#: Mailman/Handlers/Hold.py:269 Mailman/Handlers/ToDigest.py:217
#: Mailman/ListAdmin.py:174
msgid "(no subject)"
msgstr ""

#: Mailman/Handlers/Decorate.py:35
msgid "non-digest header"
msgstr ""

#: Mailman/Handlers/Decorate.py:36
msgid "non-digest footer"
msgstr ""

#: Mailman/Handlers/Decorate.py:81
msgid "[INVALID %(what)s]"
msgstr ""

#. docstring
#: Mailman/Handlers/Hold.py:51
msgid "Sender is explicitly forbidden"
msgstr ""

#: Mailman/Handlers/Hold.py:52
msgid "You are forbidden from posting messages to this list."
msgstr ""

#. docstring
#: Mailman/Handlers/Hold.py:55
msgid "Post to moderated list"
msgstr ""

#: Mailman/Handlers/Hold.py:56
msgid "Your message was deemed inappropriate by the moderator."
msgstr ""

#. docstring
#: Mailman/Handlers/Hold.py:59
msgid "Post by non-member to a members-only list"
msgstr ""

#: Mailman/Handlers/Hold.py:60
msgid "Non-members are not allowed to post messages to this list."
msgstr ""

#. docstring
#: Mailman/Handlers/Hold.py:63
msgid "Posting to a restricted list by sender requires approval"
msgstr ""

#: Mailman/Handlers/Hold.py:64
msgid "This list is restricted; your message was not approved."
msgstr ""

#. docstring
#: Mailman/Handlers/Hold.py:67
msgid "Too many recipients to the message"
msgstr ""

#: Mailman/Handlers/Hold.py:68
msgid "Please trim the recipient list; it is too long."
msgstr ""

#. docstring
#: Mailman/Handlers/Hold.py:71
msgid "Message has implicit destination"
msgstr ""

#: Mailman/Handlers/Hold.py:72
msgid ""
"Blind carbon copies or other implicit destinations are\n"
"not allowed.  Try reposting your message by explicitly including the list\n"
"address in the To: or Cc: fields."
msgstr ""

#. docstring
#: Mailman/Handlers/Hold.py:77
msgid "Message may contain administrivia"
msgstr ""

#: Mailman/Handlers/Hold.py:82
msgid ""
"Please do *not* post administrative requests to the mailing\n"
"list.  If you wish to subscribe, visit %(listurl)s or send a message with the\n"
"word `help' in it to the request address, %(request)s, for further\n"
"instructions."
msgstr ""

#. docstring
#: Mailman/Handlers/Hold.py:88
msgid "Message has a suspicious header"
msgstr ""

#: Mailman/Handlers/Hold.py:89
msgid "Your message had a suspicious header."
msgstr ""

#. docstring
#: Mailman/Handlers/Hold.py:92
msgid "Message body is too big: %d bytes but there's a limit of %d KB"
msgstr ""

#: Mailman/Handlers/Hold.py:103
msgid ""
"Your message was too big; please trim it to less than\n"
"%(kb)s KB in size."
msgstr ""

#: Mailman/Handlers/Hold.py:253
msgid "Your message to %(listname)s awaits moderator approval"
msgstr ""

#: Mailman/Handlers/Hold.py:274
msgid "%(listname)s post from %(sender)s requires approval"
msgstr ""

#: Mailman/Handlers/Replybot.py:67
msgid "Auto-response for your message to "
msgstr ""

#: Mailman/Handlers/Replybot.py:68
msgid "the \"%(realname)s\" mailing list"
msgstr ""

#: Mailman/Handlers/Replybot.py:93
msgid "The Mailman Replybot"
msgstr ""

#. docstring
#: Mailman/Handlers/Sendmail.py:44
msgid ""
"Process the message object for the given list.\n"
"\n"
"    The message object is an instance of Mailman.Message and must be fully\n"
"    prepared for delivery (i.e. all the appropriate headers must be set).  The\n"
"    message object can have the following attributes:\n"
"\n"
"    recips - the list of recipients for the message (required)\n"
"\n"
"    This function processes the message by handing off the delivery of the\n"
"    message to a sendmail (or sendmail clone) program.  It can raise a\n"
"    SendmailHandlerError if an error status was returned by the sendmail\n"
"    program.\n"
"    \n"
"    "
msgstr ""

#. docstring
#: Mailman/Handlers/SpamDetect.py:31
msgid "The message contains known spam"
msgstr ""

#: Mailman/Handlers/ToDigest.py:154
msgid "%(realname)s Digest, Vol %(volume)d, Issue %(issue)d"
msgstr ""

#: Mailman/Handlers/ToDigest.py:190
msgid "digest header"
msgstr ""

#: Mailman/Handlers/ToDigest.py:193
msgid "Digest Header"
msgstr ""

#: Mailman/Handlers/ToDigest.py:206
msgid ""
"Today's Topics:\n"
msgstr ""

#: Mailman/Handlers/ToDigest.py:273
msgid "Today's Topics (%(msgcount)d messages)"
msgstr ""

#: Mailman/Handlers/ToDigest.py:299
msgid "digest footer"
msgstr ""

#: Mailman/Handlers/ToDigest.py:302
msgid "Digest Footer"
msgstr ""

#: Mailman/Handlers/ToDigest.py:316
msgid "End of "
msgstr ""

#: Mailman/ListAdmin.py:235
msgid "Posting of your message titled \"%(subject)s\""
msgstr ""

#: Mailman/ListAdmin.py:322
msgid "New subscription request to list %(realname)s from %(addr)s"
msgstr ""

#: Mailman/ListAdmin.py:345
msgid "Subscription request"
msgstr ""

#: Mailman/ListAdmin.py:376
msgid "Original Message"
msgstr ""

#: Mailman/ListAdmin.py:379
msgid "Request to mailing list %(realname)s rejected"
msgstr ""

#. docstring
#: Mailman/LockFile.py:105
msgid "Base class for all exceptions in this module."
msgstr ""

#. docstring
#: Mailman/LockFile.py:108
msgid "An attempt is made to lock an already locked object."
msgstr ""

#. docstring
#: Mailman/LockFile.py:111
msgid "An attempt is made to unlock an object that isn't locked."
msgstr ""

#. docstring
#: Mailman/LockFile.py:114
msgid "The timeout interval elapsed before the lock succeeded."
msgstr ""

#. docstring
#: Mailman/LockFile.py:119
msgid ""
"A portable way to lock resources by way of the file system.\n"
"\n"
"    This class supports the following methods:\n"
"\n"
"    __init__(lockfile[, lifetime[, withlogging]]):\n"
"        Create the resource lock using lockfile as the global lock file.  Each\n"
"        process laying claim to this resource lock will create their own\n"
"        temporary lock files based on the path specified by lockfile.\n"
"        Optional lifetime is the number of seconds the process expects to hold\n"
"        the lock.  Optional withlogging, when true, turns on lockfile logging\n"
"        (see the module docstring for details).\n"
"\n"
"    set_lifetime(lifetime):\n"
"        Set a new lock lifetime.  This takes affect the next time the file is\n"
"        locked, but does not refresh a locked file.\n"
"\n"
"    get_lifetime():\n"
"        Return the lock's lifetime.\n"
"\n"
"    refresh([newlifetime[, unconditionally]]):\n"
"        Refreshes the lifetime of a locked file.  Use this if you realize that\n"
"        you need to keep a resource locked longer than you thought.  With\n"
"        optional newlifetime, set the lock's lifetime.   Raises NotLockedError\n"
"        if the lock is not set, unless optional unconditionally flag is set to\n"
"        true.\n"
"\n"
"    lock([timeout]):\n"
"        Acquire the lock.  This blocks until the lock is acquired unless\n"
"        optional timeout is greater than 0, in which case, a TimeOutError is\n"
"        raised when timeout number of seconds (or possibly more) expires\n"
"        without lock acquisition.  Raises AlreadyLockedError if the lock is\n"
"        already set.\n"
"\n"
"    unlock([unconditionally]):\n"
"        Relinquishes the lock.  Raises a NotLockedError if the lock is not\n"
"        set, unless optional unconditionally is true.\n"
"\n"
"    locked():\n"
"        Return 1 if the lock is set, otherwise 0.  To avoid race conditions,\n"
"        this refreshes the lock (on set locks).\n"
"\n"
"    "
msgstr ""

#. docstring
#: Mailman/LockFile.py:164
msgid ""
"Create the resource lock using lockfile as the global lock file.\n"
"\n"
"        Each process laying claim to this resource lock will create their own\n"
"        temporary lock files based on the path specified by lockfile.\n"
"        Optional lifetime is the number of seconds the process expects to hold\n"
"        the lock.  Optional withlogging, when true, turns on lockfile logging\n"
"        (see the module docstring for details).\n"
"\n"
"        "
msgstr ""

#. docstring
#: Mailman/LockFile.py:181
msgid ""
"Set a new lock lifetime.\n"
"\n"
"        This takes affect the next time the file is locked, but does not\n"
"        refresh a locked file.\n"
"        "
msgstr ""

#. docstring
#: Mailman/LockFile.py:189
msgid "Return the lock's lifetime."
msgstr ""

#. docstring
#: Mailman/LockFile.py:193
msgid ""
"Refreshes the lifetime of a locked file.\n"
"\n"
"        Use this if you realize that you need to keep a resource locked longer\n"
"        than you thought.  With optional newlifetime, set the lock's lifetime.\n"
"        Raises NotLockedError if the lock is not set, unless optional\n"
"        unconditionally flag is set to true.\n"
"        "
msgstr ""

#. docstring
#: Mailman/LockFile.py:207
msgid ""
"Acquire the lock.\n"
"\n"
"        This blocks until the lock is acquired unless optional timeout is\n"
"        greater than 0, in which case, a TimeOutError is raised when timeout\n"
"        number of seconds (or possibly more) expires without lock acquisition.\n"
"        Raises AlreadyLockedError if the lock is already set.\n"
"\n"
"        "
msgstr ""

#. docstring
#: Mailman/LockFile.py:289
msgid ""
"Unlock the lock.\n"
"\n"
"        If we don't already own the lock (either because of unbalanced unlock\n"
"        calls, or because the lock was stolen out from under us), raise a\n"
"        NotLockedError, unless optional `unconditionally' is true.\n"
"        "
msgstr ""

#. docstring
#: Mailman/LockFile.py:312
msgid ""
"Returns 1 if we own the lock, 0 if we do not.\n"
"\n"
"        Checking the status of the lockfile resets the lock's lifetime, which\n"
"        helps avoid race conditions during the lock status test.\n"
"        "
msgstr ""

#. docstring
#: Mailman/Logging/StampedLogger.py:25
msgid ""
"Record messages in log files, including date stamp and optional label.\n"
"\n"
"    If manual_reprime is on (off by default), then timestamp prefix will\n"
"    included only on first .write() and on any write immediately following a\n"
"    call to the .reprime() method.  This is useful for when StampedLogger is\n"
"    substituting for sys.stderr, where you'd like to see the grouping of\n"
"    multiple writes under a single timestamp (and there is often is one group,\n"
"    for uncaught exceptions where a script is bombing).\n"
"\n"
"    In any case, the identifying prefix will only follow writes that start on\n"
"    a new line.\n"
"\n"
"    Nofail (by default) says to fallback to sys.stderr if write fails to\n"
"    category file.  A message is emitted, but the IOError is caught.\n"
"    Initialize with nofail=0 if you want to handle the error in your code,\n"
"    instead.\n"
"\n"
"    "
msgstr ""

#. docstring
#: Mailman/Logging/StampedLogger.py:45
msgid ""
"If specified, optional label is included after timestamp.\n"
"        Other options are passed to the Logger class initializer.\n"
"        "
msgstr ""

#. docstring
#: Mailman/Logging/StampedLogger.py:55
msgid "Reset so timestamp will be included with next write."
msgstr ""

#. docstring
#: Mailman/Logging/Utils.py:28
msgid ""
"Establish a StampedLogger on sys.stderr if possible.  sys.stdout\n"
"    also gets stderr output, using a MultiLogger.\n"
"\n"
"    Returns the MultiLogger if successful, None otherwise."
msgstr ""

#: Mailman/MTA/Aliases.py:40
msgid ""
"To finish creating your mailing list, you must edit your\n"
"/etc/aliases (or equivalent) file by adding the following lines:\n"
"\n"
"## %(listname)s mailing list\n"
"## created: %(date)s %(user)s\n"
"%(list)s \"|%(wrapper)s post %(listname)s\"\n"
"%(admin)s \"|%(wrapper)s mailowner %(listname)s\"\n"
"%(request)s \"|%(wrapper)s mailcmd %(listname)s\"\n"
"%(owner)s %(listname)s-admin\n"
msgstr ""

#: Mailman/MTA/Aliases.py:63
msgid ""
"To finish removing your mailing list, you must edit your\n"
"/etc/aliases (or equivalent) file by removing the following lines:\n"
"\n"
"%(list)s \"|%(wrapper)s post %(listname)s\"\n"
"%(admin)s \"|%(wrapper)s mailowner %(listname)s\"\n"
"%(request)s \"|%(wrapper)s mailcmd %(listname)s\"\n"
"%(owner)s %(listname)s-admin\n"
msgstr ""

#: Mailman/MTA/Manual.py:38
msgid ""
"The mailing list `%(listname)s' has been created via the through-the-web\n"
"interface.  In order to complete the activation of this mailing list, the\n"
"proper /etc/aliases (or equivalent) file must be updated.  The program\n"
"`newaliases' may also have to be run.\n"
"\n"
"Here are the entries for the /etc/aliases file:\n"
msgstr ""

#: Mailman/MTA/Manual.py:48
msgid ""
"\n"
"To finish creating your mailing list, you must edit your /etc/aliases (or\n"
"equivalent) file by adding the following lines, and possibly running the\n"
"`newaliases' program:\n"
"\n"
"## %(listname)s mailing list"
msgstr ""

#: Mailman/MTA/Manual.py:65
msgid "Mailing list creation request for list %(listname)s"
msgstr ""

#: Mailman/MTA/Manual.py:80
msgid ""
"The mailing list `%(listname)s' has been removed via the through-the-web\n"
"interface.  In order to complete the de-activation of this mailing list, the\n"
"appropriate /etc/aliases (or equivalent) file must be updated.  The program\n"
"`newaliases' may also have to be run.\n"
"\n"
"Here are the entries in the /etc/aliases file that should be removed:\n"
msgstr ""

#: Mailman/MTA/Manual.py:90
msgid ""
"\n"
"To finish removing your mailing list, you must edit your /etc/aliases (or\n"
"equivalent) file by removing the following lines, and possibly running the\n"
"`newaliases' program:\n"
"\n"
"## %(listname)s mailing list"
msgstr ""

#: Mailman/MTA/Manual.py:107
msgid "Mailing list removal request for list %(listname)s"
msgstr ""

#: Mailman/MTA/Postfix.py:223
msgid "checking permissions on %(DBFILE)s"
msgstr ""

#: Mailman/MTA/Postfix.py:232
msgid "%(DBFILE)s permissions must be 066x (got %(octmode)s)"
msgstr ""

#: Mailman/MTA/Postfix.py:234 Mailman/MTA/Postfix.py:252 bin/check_perms:101
#: bin/check_perms:123 bin/check_perms:142 bin/check_perms:160
#: bin/check_perms:180 bin/check_perms:204 bin/check_perms:223
#: bin/check_perms:237 bin/check_perms:257 bin/check_perms:291
msgid "(fixing)"
msgstr ""

#: Mailman/MTA/Postfix.py:241
msgid "checking ownership of %(DBFILE)s"
msgstr ""

#: Mailman/MTA/Postfix.py:249
msgid "%(DBFILE)s owned by %(owner)s (must be owned by mailman)"
msgstr ""

#: Mailman/MTA/Qmail.py:31
msgid ""
"To finish creating your mailing list, execute the following\n"
"commands with the proper permission:\n"
"\n"
"echo '|preline %(wrapper)s post %(listname)s' >~alias/.qmail-%(listname)s\n"
"echo '|preline %(wrapper)s mailowner %(listname)s' >~alias/.qmail-%(listname)s-admin\n"
"echo '|preline %(wrapper)s mailcmd %(listname)s' >~alias/.qmail-%(listname)s-request\n"
"echo '&%(listname)s-admin' >~alias/.qmail-owner-%(listname)s\n"
"echo '&%(listname)s-admin' >~alias/.qmail-%(listname)s-owner\n"
"\n"
"chmod 644 ~alias/.qmail-%(listname)s ~alias/.qmail-%(listname)s-admin\n"
"chmod 644 ~alias/.qmail-%(listname)s-request ~alias/.qmail-%(listname)s-owner\n"
"chmod 644 ~alias/.qmail-owner-%(listname)s\n"
msgstr ""

#: Mailman/MTA/Qmail.py:48
msgid ""
"To finish removing your mailing list, you must remove the\n"
"all the entires for the %(listname)s aliases."
msgstr ""

#: Mailman/MailCommandHandler.py:55
msgid ""
"When turned on, your email address is concealed on the Web page\n"
"that lists the members of the mailing list."
msgstr ""

#: Mailman/MailCommandHandler.py:58
msgid ""
"When turned on, delivery to your email address is disabled, but\n"
"your address is still subscribed.  This is useful if you plan on taking a\n"
"short vacation."
msgstr ""

#: Mailman/MailCommandHandler.py:62
msgid ""
"When turned on, you get a separate acknowledgement email when you\n"
"post messages to the list."
msgstr ""

#: Mailman/MailCommandHandler.py:65
msgid ""
"When turned on, you do *not* get copies of your own posts to\n"
"the list.  Otherwise, you do get copies of your own posts (yes, this seems a\n"
"little backwards).  This does not affect the contents of digests, so if you\n"
"receive postings in digests, you will always get copies of your messages in\n"
"the digest."
msgstr ""

#: Mailman/MailCommandHandler.py:71
msgid ""
"When turned on, you get postings from the list bundled into\n"
"digests.  Otherwise, you get each individual message immediately as it is\n"
"posted to the list."
msgstr ""

#: Mailman/MailCommandHandler.py:75
msgid ""
"When turned on, you get `plain' digests, which are actually\n"
"formatted using the RFC1154 digest format.  This format can be easier to read\n"
"if you have a non-MIME compliant mail reader.  When this option is turned off,\n"
"you get digests in MIME format, which are much better if you have a mail\n"
"reader that supports MIME."
msgstr ""

#: Mailman/MailCommandHandler.py:205
msgid ""
"Subject line ignored:\n"
"  "
msgstr ""

#: Mailman/MailCommandHandler.py:210
msgid "Maximum command lines (%(maxlines)d) encountered, ignoring the rest..."
msgstr ""

#: Mailman/MailCommandHandler.py:226
msgid "End: "
msgstr ""

#: Mailman/MailCommandHandler.py:227
msgid "The rest of the message is ignored:"
msgstr ""

#: Mailman/MailCommandHandler.py:232
msgid "Command? "
msgstr ""

#: Mailman/MailCommandHandler.py:234
msgid ""
"\n"
"Too many errors encountered; the rest of the message is ignored:"
msgstr ""

#: Mailman/MailCommandHandler.py:266
msgid ""
"An unexpected Mailman error has occurred.\n"
"\n"
"Please forward your request to the human list administrator in charge of this\n"
"list at <%(admin)s>.  The traceback is attached below and will be forwarded to\n"
"the list administrator automatically."
msgstr ""

#: Mailman/MailCommandHandler.py:279
msgid "Unexpected Mailman error"
msgstr ""

#: Mailman/MailCommandHandler.py:280
msgid ""
"An unexpected Mailman error has occurred in\n"
"MailCommandHandler.ParseMailCommands().  Here is the traceback:\n"
"\n"
msgstr ""

#: Mailman/MailCommandHandler.py:298
msgid ""
"This is an automated response.\n"
"\n"
"There were problems with the email commands you sent to Mailman via the\n"
"administrative address %(requestaddr)s.\n"
"\n"
"To obtain instructions on valid Mailman email commands, send email to\n"
"%(requestaddr)s with the word \"help\" in the subject line or in the body of the\n"
"message.\n"
"\n"
"If you want to reach the human being that manages this mailing list, please\n"
"send your message to %(adminaddr)s.\n"
"\n"
"The following is a detailed description of the problems.\n"
"\n"
msgstr ""

#: Mailman/MailCommandHandler.py:316
msgid "Mailman results for %(realname)s"
msgstr ""

#: Mailman/MailCommandHandler.py:332
msgid "Usage: password [<oldpw> <newpw>]"
msgstr ""

#: Mailman/MailCommandHandler.py:340
msgid ""
"You are subscribed as %(user)s,\n"
"  with password: %(password)s"
msgstr ""

#: Mailman/MailCommandHandler.py:344
msgid "Found no password for %(sender)s"
msgstr ""

#: Mailman/MailCommandHandler.py:350 Mailman/MailCommandHandler.py:420
#: Mailman/MailCommandHandler.py:448 Mailman/MailCommandHandler.py:589
msgid "Succeeded."
msgstr ""

#: Mailman/MailCommandHandler.py:352 Mailman/MailCommandHandler.py:434
#: Mailman/MailCommandHandler.py:591
msgid "List is not functional."
msgstr ""

#: Mailman/MailCommandHandler.py:354
msgid "%(sender)s isn't subscribed to this list."
msgstr ""

#: Mailman/MailCommandHandler.py:357 Mailman/MailCommandHandler.py:415
#: Mailman/MailCommandHandler.py:596
msgid "You gave the wrong password."
msgstr ""

#: Mailman/MailCommandHandler.py:359
msgid "Bad user - %(sender)s."
msgstr ""

#: Mailman/MailCommandHandler.py:365
msgid "%(origsender)s is not a member of the list."
msgstr ""

#: Mailman/MailCommandHandler.py:374
msgid ""
"\n"
"To change an option, do: set <option> <on|off> <password>\n"
"\n"
"Option explanations:\n"
"--------------------"
msgstr ""

#: Mailman/MailCommandHandler.py:394
msgid ""
"Usage: set <option> <on|off> <password>\n"
"Valid options are:\n"
msgstr ""

#: Mailman/MailCommandHandler.py:411
msgid "%(origsender)s isn't subscribed to this list."
msgstr ""

#: Mailman/MailCommandHandler.py:422
msgid "You are already receiving digests."
msgstr ""

#: Mailman/MailCommandHandler.py:424
msgid "You already have digests off."
msgstr ""

#: Mailman/MailCommandHandler.py:426
msgid "Email address '%(origsender)s' not accepted by Mailman."
msgstr ""

#: Mailman/MailCommandHandler.py:430
msgid "List only accepts digest members."
msgstr ""

#: Mailman/MailCommandHandler.py:432
msgid "List doesn't accept digest members."
msgstr ""

#: Mailman/MailCommandHandler.py:436
msgid "%(origsender)s is not subscribed to this list."
msgstr ""

#: Mailman/MailCommandHandler.py:452
msgid "Usage: lists"
msgstr ""

#: Mailman/MailCommandHandler.py:457
msgid ""
"\n"
"Public mailing lists run by mailman@%(hostname)s"
msgstr ""

#: Mailman/MailCommandHandler.py:474
msgid "\trequests to: "
msgstr ""

#: Mailman/MailCommandHandler.py:477
msgid "\tdescription: "
msgstr ""

#: Mailman/MailCommandHandler.py:482
msgid ""
"Usage: info\n"
"To get info for a particular list, send your request to\n"
"the '-request' address for that list, or use the 'lists' command\n"
"to get info for all the lists."
msgstr ""

#: Mailman/MailCommandHandler.py:491
msgid "Private list: only members may see info."
msgstr ""

#: Mailman/MailCommandHandler.py:494
msgid ""
"\n"
"For more complete info about the %(listname)s mailing list, including\n"
"background and instructions for subscribing to and using it, visit:\n"
"\n"
"    %(url)s\n"
"\n"
msgstr ""

#: Mailman/MailCommandHandler.py:504
msgid "No other details are available."
msgstr ""

#: Mailman/MailCommandHandler.py:510
msgid ""
"Usage: who\n"
"To get subscribership for a particular list, send your request\n"
"to the '-request' address for that list."
msgstr ""

#: Mailman/MailCommandHandler.py:516
msgid "Private list: No one may see subscription list."
msgstr ""

#: Mailman/MailCommandHandler.py:519
msgid "Private list: only members may see list of subscribers."
msgstr ""

#: Mailman/MailCommandHandler.py:525
msgid "NO MEMBERS."
msgstr ""

#: Mailman/MailCommandHandler.py:535
msgid ""
"Digest Members:\n"
msgstr ""

#: Mailman/MailCommandHandler.py:541
msgid ""
"Non-Digest Members:\n"
msgstr ""

#: Mailman/MailCommandHandler.py:569
msgid ""
"Usage: unsubscribe [password] [email-address]\n"
"\n"
"                To unsubscribe from a particular list, send your request to\n"
"                the `-request' address for that list."
msgstr ""

#: Mailman/MailCommandHandler.py:582
msgid "A removal confirmation message has been sent."
msgstr ""

#: Mailman/MailCommandHandler.py:593
msgid "%(addr)s is not subscribed to this list."
msgstr ""

#: Mailman/MailCommandHandler.py:598
msgid "Your stored password is bogus."
msgstr ""

#. docstring
#: Mailman/MailCommandHandler.py:604
msgid "Parse subscription request and send confirmation request."
msgstr ""

#: Mailman/MailCommandHandler.py:612 Mailman/MailCommandHandler.py:629
msgid "Usage: subscribe [password] [digest|nodigest] [address=<email-address>]"
msgstr ""

#: Mailman/MailCommandHandler.py:651
msgid ""
"Your subscription request has been forwarded to the list administrator\n"
"at %(adminemail)s for review."
msgstr ""

#: Mailman/MailCommandHandler.py:656
msgid ""
"Mailman won't accept the given email address as a valid address.\n"
"(Does it have an @ in it???)"
msgstr ""

#: Mailman/MailCommandHandler.py:660
msgid ""
"The list is not fully functional, and can not accept subscription\n"
"requests."
msgstr ""

#: Mailman/MailCommandHandler.py:664
msgid ""
"Your subscription is not allowed because\n"
"the email address you gave is insecure."
msgstr ""

#: Mailman/MailCommandHandler.py:667
msgid "You are already subscribed!"
msgstr ""

#: Mailman/MailCommandHandler.py:681 Mailman/MailCommandHandler.py:715
msgid "Succeeded"
msgstr ""

#. docstring
#: Mailman/MailCommandHandler.py:684
msgid "Validate confirmation and carry out the subscription."
msgstr ""

#: Mailman/MailCommandHandler.py:686
msgid ""
"Usage: confirm <confirmation string>\n"
msgstr ""

#: Mailman/MailCommandHandler.py:694
msgid ""
"Invalid confirmation string.  Note that confirmation\n"
"                strings expire approximately %(days)s days after the initial\n"
"                subscription request.  If your confirmation has expired,\n"
"                please try to re-submit your subscription."
msgstr ""

#: Mailman/MailCommandHandler.py:701
msgid ""
"Your request has been forwarded to the\n"
"            list administrator for approval."
msgstr ""

#: Mailman/MailCommandHandler.py:706
msgid "You are already subscribed."
msgstr ""

#. docstring
#: Mailman/MailList.py:93
msgid "returns a list of the members. (all lowercase)"
msgstr ""

#. docstring
#: Mailman/MailList.py:97
msgid "returns a list of digest members. (all lowercase)"
msgstr ""

#. docstring
#: Mailman/MailList.py:101 Mailman/MailList.py:111
msgid "returns a list of the members with username case preserved."
msgstr ""

#. docstring
#: Mailman/MailList.py:121
msgid ""
"adds the appropriate data to the internal members dict.\n"
"\n"
"        If the username has upercase letters in it, then the value\n"
"        in the members dict is the case preserved address, otherwise,\n"
"        the value is 0.\n"
"        "
msgstr ""

#. docstring
#: Mailman/MailList.py:145
msgid ""
"Usually the member addr, but modified for umbrella lists.\n"
"\n"
"        Umbrella lists have other mailing lists as members, and so admin stuff\n"
"        like confirmation requests and passwords must not be sent to the\n"
"        member addresses - the sublists - but rather to the administrators of\n"
"        the sublists.  This routine picks the right address, considering\n"
"        regular member address to be their own administrative addresses.\n"
"\n"
"        "
msgstr ""

#. docstring
#: Mailman/MailList.py:161
msgid ""
"Return the member's case preserved address.\n"
"        "
msgstr ""

#. docstring
#: Mailman/MailList.py:177
msgid "Return the member's address lower cased."
msgstr ""

#. docstring
#: Mailman/MailList.py:201
msgid "Return user's setting for option, defaulting to 0 if no settings."
msgstr ""

#. docstring
#: Mailman/MailList.py:245
msgid ""
"Return the lowercased version of the subscribed email address.\n"
"\n"
"        If email is not subscribed, either as a regular member or digest\n"
"        member, None is returned.  If they are subscribed, the return value is \n"
"        guaranteed to be lowercased.\n"
"        "
msgstr ""

#. docstring
#: Mailman/MailList.py:264
msgid "Set transient variables of this and inherited classes."
msgstr ""

#. docstring
#: Mailman/MailList.py:279
msgid "Assign default values - some will be overriden by stored state."
msgstr ""

#: Mailman/MailList.py:373
msgid "Fundamental list characteristics, including descriptive info and basic behaviors."
msgstr ""

#: Mailman/MailList.py:377
msgid "The public name of this list (make case-changes only)."
msgstr ""

#: Mailman/MailList.py:378
msgid ""
"The capitalization of this name can be changed to make it\n"
"             presentable in polite company as a proper noun, or to make an\n"
"             acronym part all upper case, etc.  However, the name will be\n"
"             advertised as the email address (e.g., in subscribe confirmation\n"
"             notices), so it should <em>not</em> be otherwise altered.  (Email\n"
"             addresses are not case sensitive, but they are sensitive to\n"
"             almost everything else :-)"
msgstr ""

#: Mailman/MailList.py:387
msgid ""
"The list administrator email addresses.  Multiple\n"
"             administrator addresses, each on separate line is okay."
msgstr ""

#: Mailman/MailList.py:390
msgid ""
"There are two ownership roles associated with each mailing\n"
"             list.  The <em>list administrators</em> are the people who have\n"
"             ultimate control over all parameters of this mailing list.  They\n"
"             are able to change any list configuration variable available\n"
"             through these administration web pages.\n"
"\n"
"             <p>The <em>list moderators</em> have more limited permissions;\n"
"             they are not able to change any list configuration variable, but\n"
"             they are allowed to tend to pending administration requests,\n"
"             including approving or rejecting held subscription requests, and\n"
"             disposing of held postings.  Of course, the <em>list\n"
"             administrators</em> can also tend to pending requests.\n"
"\n"
"             <p>In order to split the list ownership duties into\n"
"             administrators and moderators, you must set a separate moderator\n"
"             password in the section below, and also provide the email\n"
"             addresses of the list moderators in this section.  Note that the\n"
"             field you are changing here specifies the list\n"
"             administators."
msgstr ""

#: Mailman/MailList.py:411
msgid ""
"The list moderator email addresses.  Multiple\n"
"             moderator addresses, each on separate line is okay."
msgstr ""

#: Mailman/MailList.py:414
msgid ""
"There are two ownership roles associated with each mailing\n"
"             list.  The <em>list administrators</em> are the people who have\n"
"             ultimate control over all parameters of this mailing list.  They\n"
"             are able to change any list configuration variable available\n"
"             through these administration web pages.\n"
"\n"
"             <p>The <em>list moderators</em> have more limited permissions;\n"
"             they are not able to change any list configuration variable, but\n"
"             they are allowed to tend to pending administration requests,\n"
"             including approving or rejecting held subscription requests, and\n"
"             disposing of held postings.  Of course, the <em>list\n"
"             administrators</em> can also tend to pending requests.\n"
"\n"
"             <p>In order to split the list ownership duties into\n"
"             administrators and moderators, you must set a separate moderator\n"
"             password in the section below, and also provide the email\n"
"             addresses of the list moderators in this section.  Note that the\n"
"             field you are changing here specifies the list moderators."
msgstr ""

#: Mailman/MailList.py:436
msgid "Default language for this list."
msgstr ""

#: Mailman/MailList.py:437
msgid ""
"All messages not related to an specific user will be\n"
"             displayed in this language."
msgstr ""

#: Mailman/MailList.py:441
msgid "A terse phrase identifying this list."
msgstr ""

#: Mailman/MailList.py:443
msgid ""
"This description is used when the mailing list is listed with\n"
"                other mailing lists, or in headers, and so forth.  It should\n"
"                be as succinct as you can get it, while still identifying what\n"
"                the list is."
msgstr ""

#: Mailman/MailList.py:449
msgid ""
"An introductory description - a few paragraphs - about the\n"
"             list.  It will be included, as html, at the top of the listinfo\n"
"             page.  Carriage returns will end a paragraph - see the details\n"
"             for more info."
msgstr ""

#: Mailman/MailList.py:453
msgid ""
"The text will be treated as html <em>except</em> that\n"
"             newlines will be translated to &lt;br&gt; - so you can use links,\n"
"             preformatted text, etc, but don't put in carriage returns except\n"
"             where you mean to separate paragraphs.  And review your changes -\n"
"             bad html (like some unterminated HTML constructs) can prevent\n"
"             display of the entire listinfo page."
msgstr ""

#: Mailman/MailList.py:461
msgid "Prefix for subject line of list postings."
msgstr ""

#: Mailman/MailList.py:462
msgid ""
"This text will be prepended to subject lines of messages\n"
"             posted to the list, to distinguish mailing list messages in in\n"
"             mailbox summaries.  Brevity is premium here, it's ok to shorten\n"
"             long mailing list names to something more concise, as long as it\n"
"             still identifies the mailing list."
msgstr ""

#: Mailman/MailList.py:469
msgid ""
"List-specific text prepended to new-subscriber welcome\n"
"             message"
msgstr ""

#: Mailman/MailList.py:472
msgid ""
"This value, if any, will be added to the front of the\n"
"             new-subscriber welcome message.  The rest of the welcome message\n"
"             already describes the important addresses and URLs for the\n"
"             mailing list, so you don't need to include any of that kind of\n"
"             stuff here.  This should just contain mission-specific kinds of\n"
"             things, like etiquette policies or team orientation, or that kind\n"
"             of thing."
msgstr ""

#: Mailman/MailList.py:481
msgid ""
"Text sent to people leaving the list.  If empty, no special\n"
"             text will be added to the unsubscribe message."
msgstr ""

#: Mailman/MailList.py:485
msgid "Explicit address"
msgstr ""

#: Mailman/MailList.py:485
msgid "Poster"
msgstr ""

#: Mailman/MailList.py:485
msgid "This list"
msgstr ""

#: Mailman/MailList.py:486
msgid ""
"Where are replies to list messages directed?\n"
"             <tt>Poster</tt> is <em>strongly</em> recommended for most mailing\n"
"             lists."
msgstr ""

#: Mailman/MailList.py:491
msgid ""
"This option controls what Mailman does to the\n"
"             <tt>Reply-To:</tt> header in messages flowing through this\n"
"             mailing list.  When set to <em>Poster</em>, no <tt>Reply-To:</tt>\n"
"             header is added by Mailman, although if one is present in the\n"
"             original message, it is not stripped.  Setting this value to\n"
"             either <em>This list</em> or <em>Explicit address</em> causes\n"
"             Mailman to insert a specific <tt>Reply-To:</tt> header in all\n"
"             messages, overriding the header in the original message if\n"
"             necessary (<em>Explicit address</em> inserts the value of <a\n"
"             href=\"?VARHELP=general/reply_to_address\">reply_to_address</a>).\n"
" \n"
"             <p>There are many reasons not to introduce or override the\n"
"             <tt>Reply-To:</tt> header.  One is that some posters depend on\n"
"             their own <tt>Reply-To:</tt> settings to convey their valid\n"
"             return address.  Another is that modifying <tt>Reply-To:</tt>\n"
"             makes it much more difficult to send private replies.  See <a\n"
"             href=\"http://www.unicom.com/pw/reply-to-harmful.html\">`Reply-To'\n"
"             Munging Considered Harmful</a> for a general discussion of this\n"
"             issue.  See <a\n"
"        href=\"http://www.metasystema.org/essays/reply-to-useful.mhtml\">Reply-To\n"
"             Munging Considered Useful</a> for a dissenting opinion.\n"
"\n"
"             <p>Some mailing lists have restricted posting privileges, with a\n"
"             parallel list devoted to discussions.  Examples are `patches' or\n"
"             `checkin' lists, where software changes are posted by a revision\n"
"             control system, but discussion about the changes occurs on a\n"
"             developers mailing list.  To support these types of mailing\n"
"             lists, select <tt>Explicit address</tt> and set the\n"
"             <tt>Reply-To:</tt> address below to point to the parallel\n"
"             list."
msgstr ""

#: Mailman/MailList.py:523
msgid "Explicit <tt>Reply-To:</tt> header."
msgstr ""

#: Mailman/MailList.py:525
msgid ""
"This is the address set in the <tt>Reply-To:</tt> header\n"
"             when the <a\n"
"             href=\"?VARHELP=general/reply_goes_to_list\">reply_goes_to_list</a>\n"
"             option is set to <em>Explicit address</em>.\n"
"\n"
"             <p>There are many reasons not to introduce or override the\n"
"             <tt>Reply-To:</tt> header.  One is that some posters depend on\n"
"             their own <tt>Reply-To:</tt> settings to convey their valid\n"
"             return address.  Another is that modifying <tt>Reply-To:</tt>\n"
"             makes it much more difficult to send private replies.  See <a\n"
"             href=\"http://www.unicom.com/pw/reply-to-harmful.html\">`Reply-To'\n"
"             Munging Considered Harmful</a> for a general discussion of this\n"
"             issue.  See <a\n"
"        href=\"http://www.metasystema.org/essays/reply-to-useful.mhtml\">Reply-To\n"
"             Munging Considered Useful</a> for a dissenting opinion.\n"
"\n"
"             <p>Some mailing lists have restricted posting privileges, with a\n"
"             parallel list devoted to discussions.  Examples are `patches' or\n"
"             `checkin' lists, where software changes are posted by a revision\n"
"             control system, but discussion about the changes occurs on a\n"
"             developers mailing list.  To support these types of mailing\n"
"             lists, specify the explicit <tt>Reply-To:</tt> address here.  You\n"
"             must also specify <tt>Explicit address</tt> in the\n"
"             <tt>reply_goes_to_list</tt>\n"
"             variable.\n"
"\n"
"             <p>Note that if the original message contains a\n"
"             <tt>Reply-To:</tt> header, it will not be changed."
msgstr ""

#: Mailman/MailList.py:555
msgid ""
"(Administrivia filter) Check postings and intercept ones\n"
"             that seem to be administrative requests?"
msgstr ""

#: Mailman/MailList.py:558
msgid ""
"Administrivia tests will check postings to see whether it's\n"
"             really meant as an administrative request (like subscribe,\n"
"             unsubscribe, etc), and will add it to the the administrative\n"
"             requests queue, notifying the administrator of the new request,\n"
"             in the process."
msgstr ""

#: Mailman/MailList.py:565
msgid ""
"Send password reminders to, eg, \"-owner\" address instead of\n"
"             directly to user."
msgstr ""

#: Mailman/MailList.py:568
msgid ""
"Set this to yes when this list is intended to cascade only\n"
"             to other mailing lists.  When set, meta notices like\n"
"             confirmations and password reminders will be directed to an\n"
"             address derived from the member's address - it will have the\n"
"             value of \"umbrella_member_suffix\" appended to the member's\n"
"             account name."
msgstr ""

#: Mailman/MailList.py:576
msgid ""
"Suffix for use when this list is an umbrella for other\n"
"             lists, according to setting of previous \"umbrella_list\"\n"
"             setting."
msgstr ""

#: Mailman/MailList.py:580
msgid ""
"When \"umbrella_list\" is set to indicate that this list has\n"
"             other mailing lists as members, then administrative notices like\n"
"             confirmations and password reminders need to not be sent to the\n"
"             member list addresses, but rather to the owner of those member\n"
"             lists.  In that case, the value of this setting is appended to\n"
"             the member's account name for such notices.  `-owner' is the\n"
"             typical choice.  This setting has no effect when \"umbrella_list\"\n"
"             is \"No\"."
msgstr ""

#: Mailman/MailList.py:590
msgid ""
"Send monthly password reminders or no? Overrides the\n"
"             previous option."
msgstr ""

#: Mailman/MailList.py:594
msgid "Send welcome message when people subscribe?"
msgstr ""

#: Mailman/MailList.py:595
msgid ""
"Turn this on only if you plan on subscribing people manually\n"
"             and don't want them to know that you did so.  This option is most\n"
"             useful for transparently migrating lists from some other mailing\n"
"             list manager to Mailman."
msgstr ""

#: Mailman/MailList.py:601
msgid ""
"Should administrator get immediate notice of new requests,\n"
"             as well as daily notices about collected ones?"
msgstr ""

#: Mailman/MailList.py:604
msgid ""
"List admins are sent daily reminders of pending admin\n"
"             approval requests, like subscriptions to a moderated list or\n"
"             postings that are being held for one reason or another.  Setting\n"
"             this option causes notices to be sent immediately on the arrival\n"
"             of new requests, as well."
msgstr ""

#: Mailman/MailList.py:611
msgid ""
"Should administrator get notices of subscribes and\n"
"             unsubscribes?"
msgstr ""

#: Mailman/MailList.py:616
msgid "Send mail to poster when their posting is held for approval?"
msgstr ""

#: Mailman/MailList.py:618
msgid ""
"Approval notices are sent when mail triggers certain of the\n"
"             limits <em>except</em> routine list moderation and spam filters,\n"
"             for which notices are <em>not</em> sent.  This option overrides\n"
"             ever sending the notice."
msgstr ""

#: Mailman/MailList.py:624
msgid ""
"Maximum length in Kb of a message body.  Use 0 for no\n"
"             limit."
msgstr ""

#: Mailman/MailList.py:628
msgid "Host name this list prefers for email."
msgstr ""

#: Mailman/MailList.py:630
msgid ""
"The \"host_name\" is the preferred name for email to\n"
"             mailman-related addresses on this host, and generally should be\n"
"             the mail host's exchanger address, if any.  This setting can be\n"
"             useful for selecting among alternative names of a host that has\n"
"             multiple addresses."
msgstr ""

#: Mailman/MailList.py:658
msgid "none"
msgstr ""

#: Mailman/MailList.py:659 Mailman/MailList.py:682
msgid "confirm"
msgstr ""

#: Mailman/MailList.py:660 Mailman/MailList.py:683
msgid "require approval"
msgstr ""

#: Mailman/MailList.py:661 Mailman/MailList.py:684
msgid "confirm+approval"
msgstr ""

#: Mailman/MailList.py:663 Mailman/MailList.py:686
msgid "What steps are required for subscription?<br>"
msgstr ""

#: Mailman/MailList.py:664
msgid ""
"None - no verification steps (<em>Not\n"
"                           Recommended </em>)<br>\n"
"                           confirm (*) - email confirmation step required <br>\n"
"                           require approval - require list administrator\n"
"                           approval for subscriptions <br>\n"
"                           confirm+approval - both confirm and approve\n"
"                           \n"
"                           <p>(*) when someone requests a subscription,\n"
"                           Mailman sends them a notice with a unique\n"
"                           subscription request number that they must reply to\n"
"                           in order to subscribe.<br>\n"
"\n"
"                           This prevents mischievous (or malicious) people\n"
"                           from creating subscriptions for others without\n"
"                           their consent."
msgstr ""

#: Mailman/MailList.py:687
msgid ""
"confirm (*) - email confirmation required <br>\n"
"                           require approval - require list administrator\n"
"                           approval for subscriptions <br>\n"
"                           confirm+approval - both confirm and approve\n"
"                           \n"
"                           <p>(*) when someone requests a subscription,\n"
"                           Mailman sends them a notice with a unique\n"
"                           subscription request number that they must reply to\n"
"                           in order to subscribe.<br> This prevents\n"
"                           mischievous (or malicious) people from creating\n"
"                           subscriptions for others without their consent."
msgstr ""

#: Mailman/MailList.py:703
msgid ""
"List access policies, including anti-spam measures, covering\n"
"            members and outsiders.  See also the <a\n"
"            href=\"%(admin)s/archive\">Archival Options section</a> for separate\n"
"            archive-privacy settings."
msgstr ""

#: Mailman/MailList.py:708
msgid "Subscribing"
msgstr ""

#: Mailman/MailList.py:710
msgid ""
"Advertise this list when people ask what lists are on this\n"
"             machine?"
msgstr ""

#: Mailman/MailList.py:715
msgid "Membership exposure"
msgstr ""

#: Mailman/MailList.py:717
msgid "Anyone"
msgstr ""

#: Mailman/MailList.py:717
msgid "List admin only"
msgstr ""

#: Mailman/MailList.py:717
msgid "List members"
msgstr ""

#: Mailman/MailList.py:718
msgid "Who can view subscription list?"
msgstr ""

#: Mailman/MailList.py:720
msgid ""
"When set, the list of subscribers is protected by member or\n"
"             admin password authentication."
msgstr ""

#: Mailman/MailList.py:724
msgid ""
"Show member addrs so they're not directly recognizable as\n"
"             email addrs?"
msgstr ""

#: Mailman/MailList.py:726
msgid ""
"Setting this option causes member email addresses to be\n"
"             transformed when they are presented on list web pages (both in\n"
"             text and as links), so they're not trivially recognizable as\n"
"             email addresses.  The intention is to to prevent the addresses\n"
"             from being snarfed up by automated web scanners for use by\n"
"             spammers."
msgstr ""

#: Mailman/MailList.py:733
msgid "General posting filters"
msgstr ""

#: Mailman/MailList.py:735
msgid "Must posts be approved by an administrator?"
msgstr ""

#: Mailman/MailList.py:738
msgid ""
"Restrict posting privilege to list members?\n"
"             (<i>member_posting_only</i>)"
msgstr ""

#: Mailman/MailList.py:741
msgid ""
"Use this option if you want to restrict posting to list\n"
"             members.  If you want list members to be able to post, plus a\n"
"             handful of other posters, see the <i> posters </i> setting\n"
"             below."
msgstr ""

#: Mailman/MailList.py:747
msgid ""
"Addresses of members accepted for posting to this list\n"
"             without implicit approval requirement. (See \"Restrict ... to list\n"
"             members\" for whether or not this is in addition to allowing\n"
"             posting by list members"
msgstr ""

#: Mailman/MailList.py:752
msgid ""
"Adding entries here will have one of two effects, according\n"
"             to whether another option restricts posting to members.\n"
"\n"
"             <ul>\n"
"                 <li>If <i>member_posting_only</i> is 'yes', then entries\n"
"                 added here will have posting privilege in addition to list\n"
"                 members.\n"
"\n"
"                 <li>If <i>member_posting_only</i> is 'no', then <em>only</em>\n"
"                 the posters listed here will be able to post without admin\n"
"                 approval.\n"
"\n"
"             </ul>"
msgstr ""

#: Mailman/MailList.py:766
msgid "Spam-specific posting filters"
msgstr ""

#: Mailman/MailList.py:770
msgid ""
"Must posts have list named in destination (to, cc) field\n"
"             (or be among the acceptable alias names, specified below)?"
msgstr ""

#: Mailman/MailList.py:773
msgid ""
"Many (in fact, most) spams do not explicitly name their\n"
"             myriad destinations in the explicit destination addresses - in\n"
"             fact often the To: field has a totally bogus address for\n"
"             obfuscation.  The constraint applies only to the stuff in the\n"
"             address before the '@' sign, but still catches all such spams.\n"
"\n"
"             <p>The cost is that the list will not accept unhindered any\n"
"             postings relayed from other addresses, unless\n"
"\n"
"             <ol>\n"
"                 <li>The relaying address has the same name, or\n"
"\n"
"                 <li>The relaying address name is included on the options that\n"
"                 specifies acceptable aliases for the list.\n"
"\n"
"             </ol>"
msgstr ""

#: Mailman/MailList.py:791
msgid ""
"Alias names (regexps) which qualify as explicit to or cc\n"
"             destination names for this list."
msgstr ""

#: Mailman/MailList.py:794
msgid ""
"Alternate addresses that are acceptable when\n"
"             `require_explicit_destination' is enabled.  This option takes a\n"
"             list of regular expressions, one per line, which is matched\n"
"             against every recipient address in the message.  The matching is\n"
"             performed with Python's re.match() function, meaning they are\n"
"             anchored to the start of the string.\n"
"             \n"
"             <p>For backwards compatibility with Mailman 1.1, if the regexp\n"
"             does not contain an `@', then the pattern is matched against just\n"
"             the local part of the recipient address.  If that match fails, or\n"
"             if the pattern does contain an `@', then the pattern is matched\n"
"             against the entire recipient address.\n"
"             \n"
"             <p>Matching against the local part is deprecated; in a future\n"
"             release, the pattern will always be matched against the entire\n"
"             recipient address."
msgstr ""

#: Mailman/MailList.py:812
msgid "Ceiling on acceptable number of recipients for a posting."
msgstr ""

#: Mailman/MailList.py:814
msgid ""
"If a posting has this number, or more, of recipients, it is\n"
"             held for admin approval.  Use 0 for no ceiling."
msgstr ""

#: Mailman/MailList.py:818
msgid "Addresses whose postings are always held for approval."
msgstr ""

#: Mailman/MailList.py:819
msgid ""
"Email addresses whose posts should always be held for\n"
"             approval, no matter what other options you have set.  See also\n"
"             the subsequent option which applies to arbitrary content of\n"
"             arbitrary headers."
msgstr ""

#: Mailman/MailList.py:825
msgid "Hold posts with header value matching a specified regexp."
msgstr ""

#: Mailman/MailList.py:826
msgid ""
"Use this option to prohibit posts according to specific\n"
"             header values.  The target value is a regular-expression for\n"
"             matching against the specified header.  The match is done\n"
"             disregarding letter case.  Lines beginning with '#' are ignored\n"
"             as comments.\n"
"\n"
"             <p>For example:<pre>to: .*@public.com </pre> says to hold all\n"
"             postings with a <em>To:</em> mail header containing '@public.com'\n"
"             anywhere among the addresses.\n"
"\n"
"             <p>Note that leading whitespace is trimmed from the regexp.  This\n"
"             can be circumvented in a number of ways, e.g. by escaping or\n"
"             bracketing it.\n"
"             \n"
"             <p> See also the <em>forbidden_posters</em> option for a related\n"
"             mechanism."
msgstr ""

#: Mailman/MailList.py:844
msgid ""
"Hide the sender of a message, replacing it with the list\n"
"           address (Removes From, Sender and Reply-To fields)"
msgstr ""

#: Mailman/MailList.py:849
msgid "Policies concerning immediately delivered list traffic."
msgstr ""

#: Mailman/MailList.py:852
msgid ""
"Can subscribers choose to receive mail immediately, rather\n"
"             than in batched digests?"
msgstr ""

#: Mailman/MailList.py:856
msgid "Header added to mail sent to regular list members"
msgstr ""

#: Mailman/MailList.py:857
msgid ""
"Text prepended to the top of every immediately-delivery\n"
"             message. "
msgstr ""

#: Mailman/MailList.py:862
msgid "Footer added to mail sent to regular list members"
msgstr ""

#: Mailman/MailList.py:863
msgid ""
"Text appended to the bottom of every immediately-delivery\n"
"             message. "
msgstr ""

#. docstring
#: Mailman/MailList.py:1010
msgid "Migrate prior version's state to new structure, if changed."
msgstr ""

#. docstring
#: Mailman/MailList.py:1024
msgid "Normalize selected values to known formats."
msgstr ""

#: Mailman/MailList.py:1076 Mailman/MailList.py:1190
msgid " from %(remote)s"
msgstr ""

#: Mailman/MailList.py:1097 Mailman/MailList.py:1145
msgid "%(realname)s -- confirmation of subscription -- confirm %(cookie)s"
msgstr ""

#: Mailman/MailList.py:1111
msgid "subscriptions to %(realname)s require administrator approval"
msgstr ""

#: Mailman/MailList.py:1167
msgid "subscriptions to %(name)s require administrator approval"
msgstr ""

#: Mailman/MailList.py:1207
msgid "%(realname)s -- confirmation of removal -- confirm %(cookie)s"
msgstr ""

#. docstring
#: Mailman/MailList.py:1229
msgid ""
"Subscribe members in list `names'.\n"
"\n"
"        Passwords can be supplied in the passwords list.  If an empty\n"
"        password is encountered, a random one is generated and used.\n"
"\n"
"        Returns a dict where the keys are addresses that were tried\n"
"        subscribed, and the corresponding values are either two-element\n"
"        tuple containing the first exception type and value that was\n"
"        raised when trying to add that address, or `None' to indicate\n"
"        that no exception was raised.\n"
"\n"
"        "
msgstr ""

#: Mailman/MailList.py:1317
msgid "%(realname)s subscription notification"
msgstr ""

#: Mailman/MailList.py:1370
msgid "%(realname)s unsubscribe notification"
msgstr ""

#. docstring
#: Mailman/MailList.py:1434
msgid ""
"True if list name or any acceptable_alias is included among the\n"
"        to or cc addrs."
msgstr ""

#. docstring
#: Mailman/MailList.py:1493
msgid "Return a list of triples [(field name, regex, line), ...]."
msgstr ""

#. docstring
#: Mailman/MailList.py:1525
msgid ""
"Return true if named header field matches a regexp in the\n"
"        bounce_matching_header list variable.\n"
"\n"
"        Returns constraint line which matches or empty string for no\n"
"        matches.\n"
"        "
msgstr ""

#. docstring
#: Mailman/Message.py:88
msgid "Class for internally crafted messages."
msgstr ""

#. docstring
#: Mailman/Message.py:105
msgid ""
"Prepares the message for sending by enqueing it to the `virgin'\n"
"        queue.\n"
"\n"
"        This is used for all internally crafted messages.\n"
"        "
msgstr ""

#. docstring
#: Mailman/Pending.py:46
msgid "Create a new entry in the pending database, returning cookie for it."
msgstr ""

#. docstring
#: Mailman/Pending.py:80
msgid "Return data for cookie, removing it from db, or None if not found."
msgstr ""

#. docstring
#: Mailman/Queue/Switchboard.py:175
msgid "Python marshal format."
msgstr ""

#. docstring
#: Mailman/Queue/Switchboard.py:215
msgid "Native (i.e. compiled-in) Berkeley db format."
msgstr ""

#. docstring
#: Mailman/Queue/Switchboard.py:241
msgid ""
"Human readable .db file format.\n"
"\n"
"    key/value pairs are written as\n"
"\n"
"        key = value\n"
"\n"
"    as real Python code which can be execfile'd.\n"
"    "
msgstr ""

#. docstring
#: Mailman/SafeDict.py:27
msgid ""
"Dictionary which returns a default value for unknown keys.\n"
"\n"
"    This is used in maketext so that editing templates is a bit more robust.\n"
"    "
msgstr ""

#. docstring
#: Mailman/SecurityManager.py:273
msgid "True if password is valid for site, list admin, or specific user."
msgstr ""

#. docstring
#: Mailman/Utils.py:48
msgid "Return true iff list `listname' exists."
msgstr ""

#. docstring
#: Mailman/Utils.py:57
msgid "Return the names of all lists in default list directory."
msgstr ""

#. docstring
#: Mailman/Utils.py:68
msgid ""
"Wrap and fill the text to the specified column.\n"
"\n"
"    Wrapping is always in effect, although if it is not possible to wrap a\n"
"    line (because some word is longer than `column' characters) the line is\n"
"    broken at the next available whitespace boundary.  Paragraphs are also\n"
"    always filled, unless honor_leading_ws is true and the line begins with\n"
"    whitespace.  This is the algorithm that the Python FAQ wizard uses, and\n"
"    seems like a good compromise.\n"
"\n"
"    "
msgstr ""

#. docstring
#: Mailman/Utils.py:154
msgid "Verify that the an email address isn't grossly invalid."
msgstr ""

#. docstring
#: Mailman/Utils.py:179
msgid ""
"Parse common types of email addresses:\n"
"\n"
"    User J. Person <person@allusers.com>\n"
"    person@allusers.com (User J. Person)\n"
"\n"
"    TBD: I wish we could use rfc822.parseaddr() but 1) the interface is not\n"
"    convenient, and 2) it doesn't work for the second type of address.\n"
"\n"
"    Argument is a list of addresses, return value is a list of the parsed\n"
"    email addresses.  The argument can also be a single string, in which case\n"
"    the return value is a single string.  All addresses are string.strip()'d.\n"
"\n"
"    "
msgstr ""

#. docstring
#: Mailman/Utils.py:224
msgid ""
"target - scriptname only, nothing extra\n"
"    web_page_url - the list's configvar of the same name\n"
"    absolute - a flag which if set, generates an absolute url\n"
"    "
msgstr ""

#. docstring
#: Mailman/Utils.py:267
msgid "returns the address with the domain part lowercased"
msgstr ""

#. docstring
#: Mailman/Utils.py:279
msgid "True when username matches and host addr of one addr contains other's."
msgstr ""

#. docstring
#: Mailman/Utils.py:301
msgid ""
"returns a sorted list of addresses that could possibly match\n"
"    a given name.\n"
"\n"
"    For Example, given scott@pobox.com, return ['scott@pobox.com'],\n"
"    given scott@blackbox.pobox.com return ['scott@blackbox.pobox.com',\n"
"                                           'scott@pobox.com']"
msgstr ""

#. docstring
#: Mailman/Utils.py:321
msgid ""
"List2Dict returns a dict keyed by the entries in the list\n"
"    passed to it."
msgstr ""

#. docstring
#: Mailman/Utils.py:330
msgid ""
"Given an email address, and any number of dictionaries keyed by\n"
"    email addresses, returns the subset of the list that matches the\n"
"    given address.  Should sort based on exactness of match,\n"
"    just in case."
msgstr ""

#. docstring
#: Mailman/Utils.py:423
msgid ""
"Make email address unrecognizable to web spiders, but invertable.\n"
"\n"
"    When for_text option is set (not default), make a sentence fragment\n"
"    instead of a token."
msgstr ""

#. docstring
#: Mailman/Utils.py:433
msgid "Invert ObscureEmail() conversion."
msgstr ""

#. docstring
#: Mailman/Utils.py:592
msgid ""
"Like `rm -r'\n"
"\n"
"    Completely and recursively removes a directory and all its contents,\n"
"    unlike os.removedirs().\n"
"    "
msgstr ""

#. docstring
#: Mailman/Utils.py:613
msgid ""
"Return the full virtual path this CGI script was invoked with.\n"
"\n"
"    Newer web servers seems to supply this info in the REQUEST_URI\n"
"    environment variable -- which isn't part of the CGI/1.1 spec.\n"
"    Thus, if REQUEST_URI isn't available, we concatenate SCRIPT_NAME\n"
"    and PATH_INFO, both of which are part of CGI/1.1.\n"
"\n"
"    Optional argument `fallback' (default `None') is returned if both of\n"
"    the above methods fail.\n"
"\n"
"    "
msgstr ""

#. docstring
#: Mailman/htmlformat.py:44
msgid "Return a presentation of an object, invoking their Format method if any."
msgstr ""

#. docstring
#: Mailman/htmlformat.py:222
msgid "FontSize is being deprecated - use FontAttr(..., size=\"...\") instead."
msgstr ""

#. docstring
#: Mailman/htmlformat.py:235
msgid "Present arbitrary font attributes."
msgstr ""

#. docstring
#: Mailman/htmlformat.py:335
msgid "Document without head section, for templates that provide their own."
msgstr ""

#: Mailman/htmlformat.py:581
msgid "Delivered by Mailman<br>version %(version)s"
msgstr ""

#: Mailman/htmlformat.py:582
msgid "Python Powered"
msgstr ""

#: Mailman/htmlformat.py:583
msgid "Gnu's Not Unix"
msgstr ""

#. docstring
#: Mailman/versions.py:48
msgid "Dispose of old vars and user options, mapping to new ones when suitable."
msgstr ""

#. docstring
#: Mailman/versions.py:70
msgid ""
"Transform old variable values into new ones, deleting old ones.\n"
"    stored_state is last snapshot from file, as opposed to from InitVars()."
msgstr ""

#. docstring
#: Mailman/versions.py:75
msgid ""
"Use specified old value if new value is not in stored state.\n"
"\n"
"        If the old attr does not exist, and no newdefault is specified, the\n"
"        new attr is *not* created - so either specify a default or be positive\n"
"        that the old attr exists - or don't depend on the new attr.\n"
"\n"
"        "
msgstr ""

#. docstring
#: Mailman/versions.py:180
msgid "Add defaults for these new variables if they don't exist."
msgstr ""

#. docstring
#: Mailman/versions.py:206
msgid "Transform sense of changed user options."
msgstr ""

#. docstring
#: Mailman/versions.py:216
msgid "Keys in user_options must be lower case."
msgstr ""

#. docstring
#: Mailman/versions.py:234
msgid "With version 1.2, we use a new pending request database schema."
msgstr ""

#: bin/add_members:113
msgid "Big change in %(listname)s@%(listhost)s mailing list"
msgstr ""

#: bin/add_members:165
msgid "Cannot read both digest and normal members from standard input."
msgstr ""

#: bin/add_members:171
msgid "You must first create the list by running: newlist %(listname)s"
msgstr ""

#: bin/add_members:213
msgid "Already subscribed (skipping):"
msgstr ""

#: bin/add_members:216
msgid "( blank line )"
msgstr ""

#: bin/add_members:218
msgid "Not a valid email address:"
msgstr ""

#: bin/addlang:79
msgid "--listname/-l is required"
msgstr ""

#: bin/addlang:87 bin/arch:91 bin/change_pw:100 bin/config_list:101
#: bin/config_list:192
msgid ""
"No such list \"%(listname)s\"\n"
"%(e)s"
msgstr ""

#: bin/addlang:97
msgid "No template directory for language: %(dir)s"
msgstr ""

#: bin/addlang:108
msgid "List already supports language: %(lang)s"
msgstr ""

#: bin/addlang:115
msgid "Language support for %(okmsg)s added"
msgstr ""

#: bin/arch:73
msgid "listname is required"
msgstr ""

#: bin/arch:115
msgid "Cannot open mbox file %(mbox)s: %(msg)s"
msgstr ""

#: bin/change_pw:138
msgid "Bad arguments: %(strargs)s"
msgstr ""

#: bin/change_pw:142
msgid "Empty list passwords are not allowed"
msgstr ""

#: bin/change_pw:152 bin/check_db:102 bin/sync_members:221
msgid "Nothing to do."
msgstr ""

#: bin/change_pw:173
msgid "New %(listname)s password: %(notifypassword)s"
msgstr ""

#: bin/change_pw:179
msgid "Your new %(listname)s list password"
msgstr ""

#: bin/change_pw:180
msgid ""
"The site administrator at %(hostname)s has changed the password for your\n"
"mailing list %(listname)s.  It is now\n"
"\n"
"    %(notifypassword)s\n"
"\n"
"Please be sure to use this for all future list administration.  You may want\n"
"to log in now to your list and change the password to something more to your\n"
"liking.  Visit your list admin page at\n"
"\n"
"    %(adminurl)s\n"
msgstr ""

#: bin/check_db:67
msgid ""
"%(filename)s cannot be opened for reading:\n"
"\t"
msgstr ""

#: bin/check_db:74
msgid ""
"%(filename)s contains a corrupt marshal:\n"
"\t"
msgstr ""

#: bin/check_db:107
msgid "No list named:"
msgstr ""

#: bin/check_db:116
msgid ""
"***** ALERT *****\n"
"The original database file for the list `%(listname)s' is corrupt, but the\n"
"backup seems fine.  Consider copying\n"
"    %(lastdb)s\n"
"to\n"
"    %(configdb)s\n"
"however, you may lose some data."
msgstr ""

#: bin/check_db:125
msgid ""
"\n"
"***** ALERT *****\n"
"Both the original database file and the backup for list `%(listname)s' seem\n"
"corrupted.  You will probably need to recover both\n"
"    %(configdb)s\n"
"and\n"
"    %(lastdb)s\n"
"from a system backup, or remove the list `%(listname)s' and\n"
"re-create it from scratch."
msgstr ""

#: bin/check_db:135
msgid "The list `%(listname)s' databases seem fine."
msgstr ""

#: bin/check_perms:86
msgid "    checking gid and mode for %(path)s"
msgstr ""

#: bin/check_perms:98
msgid "%(path)s bad gid (has: %(groupname)s, expected %(MAILMAN_GRPNAME)s)"
msgstr ""

#: bin/check_perms:121
msgid "directory permissions must be %(octperms)s: %(path)s"
msgstr ""

#: bin/check_perms:132
msgid "checking mode for %(prefix)s"
msgstr ""

#: bin/check_perms:140
msgid "directory must be at least 02775: %(d)s"
msgstr ""

#: bin/check_perms:153
msgid "checking perms on %(private)s"
msgstr ""

#: bin/check_perms:158
msgid "%(private)s must not be other-readable"
msgstr ""

#: bin/check_perms:178
msgid "mbox file must be at least 0660:"
msgstr ""

#: bin/check_perms:202
msgid "%(dbdir)s \"other\" perms must be 000"
msgstr ""

#: bin/check_perms:212
msgid "checking cgi-bin permissions"
msgstr ""

#: bin/check_perms:217
msgid "    checking set-gid for %(path)s"
msgstr ""

#: bin/check_perms:221
msgid "%(path)s must be set-gid"
msgstr ""

#: bin/check_perms:231
msgid "checking set-gid for %(wrapper)s"
msgstr ""

#: bin/check_perms:235
msgid "%(wrapper)s must be set-gid"
msgstr ""

#: bin/check_perms:245
msgid "checking permissions on %(pwfile)s"
msgstr ""

#: bin/check_perms:254
msgid "%(pwfile)s permissions must be exactly 0640 (got %(octmode)s)"
msgstr ""

#: bin/check_perms:276
msgid "checking permissions on list data"
msgstr ""

#: bin/check_perms:281
msgid "    checking permissions on: %(path)s"
msgstr ""

#: bin/check_perms:289
msgid "file permissions must be at least 660: %(path)s"
msgstr ""

#: bin/check_perms:331
msgid "No problems found"
msgstr ""

#: bin/check_perms:333
msgid "Problems found:"
msgstr ""

#: bin/check_perms:334
msgid "Re-run as %(MAILMAN_OWNER)s (or root) with -f flag to fix"
msgstr ""

#: bin/clone_member:90
msgid "processing mailing list:"
msgstr ""

#: bin/clone_member:97
msgid "    scanning list owners:"
msgstr ""

#: bin/clone_member:115
msgid "    new list owners:"
msgstr ""

#: bin/clone_member:117
msgid "(no change)"
msgstr ""

#: bin/clone_member:126
msgid "    address not found:"
msgstr ""

#: bin/clone_member:142
msgid "    clone address added:"
msgstr ""

#: bin/clone_member:145
msgid "    clone address is already a member:"
msgstr ""

#: bin/clone_member:162
msgid "    original address removed:"
msgstr ""

#: bin/clone_member:213
msgid "Not a valid email address: %(toaddr)s"
msgstr ""

#: bin/clone_member:226
msgid ""
"Error opening list \"%(listname)s\", skipping.\n"
"%(e)s"
msgstr ""

#: bin/config_list:105
msgid ""
"## \"%(listname)s\" mailing list configuration settings -*- python -*-\n"
"## captured on %(when)s\n"
msgstr ""

#: bin/config_list:115
msgid "options"
msgstr ""

#: bin/config_list:166
msgid "legal values are:"
msgstr ""

#: bin/config_list:204
msgid "attribute \"%(k)s\" ignored"
msgstr ""

#: bin/config_list:207
msgid "attribute \"%(k)s\" changed"
msgstr ""

#: bin/config_list:243
msgid "Only one of -i or -o is allowed"
msgstr ""

#: bin/config_list:245
msgid "One of -i or -o is required"
msgstr ""

#: bin/config_list:249
msgid "List name is required"
msgstr ""

#: bin/find_member:93 bin/list_admins:85 bin/list_members:117 bin/move_list:78
#: bin/remove_members:110 bin/rmlist:82 bin/sync_members:200
msgid "No such list: %(listname)s"
msgstr ""

#: bin/find_member:155
msgid "Search regular expression required"
msgstr ""

#: bin/find_member:160
msgid "No lists to search"
msgstr ""

#: bin/find_member:169
msgid "found in:"
msgstr ""

#: bin/find_member:175
msgid "(as owner)"
msgstr ""

#: bin/list_admins:91
msgid "List: %(listname)s, \tOwners: %(owners)s"
msgstr ""

#: bin/list_lists:97
msgid "No matching mailing lists found"
msgstr ""

#: bin/list_lists:100
msgid "matching mailing lists found:"
msgstr ""

#: bin/list_members:109
msgid "Could not open file for writing:"
msgstr ""

#: bin/mmsitepass:69
msgid "site"
msgstr ""

#: bin/mmsitepass:76
msgid "list creator"
msgstr ""

#: bin/mmsitepass:82
msgid "New %(pwdesc)s password: "
msgstr ""

#: bin/mmsitepass:83
msgid "Again to confirm password: "
msgstr ""

#: bin/mmsitepass:85
msgid "Passwords do not match; no changes made."
msgstr ""

#: bin/mmsitepass:88
msgid "Interrupted..."
msgstr ""

#: bin/mmsitepass:94
msgid "Password changed."
msgstr ""

#: bin/mmsitepass:96
msgid "Password change failed."
msgstr ""

#: bin/move_list:73
msgid "You must supply a list name"
msgstr ""

#: bin/newlist:109
msgid "Enter the name of the list: "
msgstr ""

#: bin/newlist:129
msgid "Enter the email of the person running the list: "
msgstr ""

#: bin/newlist:134
msgid "Initial %(listname)s password: "
msgstr ""

#: bin/newlist:153
msgid "Bad owner email address: %(owner_mail)s"
msgstr ""

#: bin/newlist:171
msgid "Hit enter to notify %(listname)s owner..."
msgstr ""

#: bin/pygettext.py:160
msgid ""
"# SOME DESCRIPTIVE TITLE.\n"
"# Copyright (C) YEAR ORGANIZATION\n"
"# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.\n"
"#\n"
"msgid \"\"\n"
"msgstr \"\"\n"
"\"Project-Id-Version: PACKAGE VERSION\\n\"\n"
"\"POT-Creation-Date: %(time)s\\n\"\n"
"\"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\\n\"\n"
"\"Last-Translator: FULL NAME <EMAIL@ADDRESS>\\n\"\n"
"\"Language-Team: LANGUAGE <LL@li.org>\\n\"\n"
"\"MIME-Version: 1.0\\n\"\n"
"\"Content-Type: text/plain; charset=CHARSET\\n\"\n"
"\"Content-Transfer-Encoding: ENCODING\\n\"\n"
"\"Generated-By: pygettext.py %(version)s\\n\"\n"
"\n"
msgstr ""

#: bin/pygettext.py:357
msgid "# File: %(filename)s, line: %(lineno)d"
msgstr ""

#: bin/pygettext.py:365
msgid " %(filename)s:%(lineno)d"
msgstr ""

#: bin/pygettext.py:439
msgid "Invalid value for --style: %s"
msgstr ""

#: bin/pygettext.py:447
msgid "pygettext.py (xgettext for Python) %s"
msgstr ""

#: bin/pygettext.py:453
msgid "--width argument must be an integer: %s"
msgstr ""

#: bin/pygettext.py:470
msgid "Can't read --exclude-file: %s"
msgstr ""

#: bin/pygettext.py:481
msgid "Reading standard input"
msgstr ""

#: bin/pygettext.py:486
msgid "Working on %s"
msgstr ""

#: bin/pygettext.py:519
msgid "a unicode string"
msgstr ""

#: bin/remove_members:104
msgid "Could not open file for reading: %(filename)s."
msgstr ""

#: bin/remove_members:121
msgid "User `%(addr)s' not found."
msgstr ""

#: bin/rmlist:60 bin/rmlist:63
msgid "Removing %(msg)s"
msgstr ""

#: bin/rmlist:66
msgid "%(listname)s %(msg)s not found as %(dir)s"
msgstr ""

#: bin/rmlist:94
msgid "Not removing archives.  Reinvoke with -a to remove them."
msgstr ""

#: bin/rmlist:107 bin/rmlist:108
msgid "private archives"
msgstr ""

#: bin/rmlist:109 bin/rmlist:110
msgid "public archives"
msgstr ""

#: bin/sync_members:100
msgid "Bad choice: %(yesno)s"
msgstr ""

#: bin/sync_members:122
msgid "Dry run mode"
msgstr ""

#: bin/sync_members:137
msgid "Only one -f switch allowed"
msgstr ""

#: bin/sync_members:141
msgid "No argument to -f given"
msgstr ""

#: bin/sync_members:150
msgid "Illegal option: %(opt)s"
msgstr ""

#: bin/sync_members:156
msgid "No listname given"
msgstr ""

#: bin/sync_members:160
msgid "Must have a listname and a filename"
msgstr ""

#: bin/sync_members:169
msgid "Cannot read address file: %(filename)s: %(msg)s"
msgstr ""

#: bin/sync_members:181
msgid "Ignore  :  %30(addr)s"
msgstr ""

#: bin/sync_members:190
msgid "Invalid :  %30(addr)s"
msgstr ""

#: bin/sync_members:193
msgid "You must fix the preceding invalid addresses first."
msgstr ""

#: bin/sync_members:235
msgid "Added  : %30(laddr)s (%30(addr)s)"
msgstr ""

#: bin/sync_members:243
msgid "Removed: %30(laddr)s (%30(addr)s)"
msgstr ""

#: bin/update:97
msgid "Fixing language templates: %(listname)s"
msgstr ""

#: bin/update:178 bin/update:409
msgid "WARNING: could not acquire lock for list: %(listname)s"
msgstr ""

#: bin/update:201
msgid ""
"For some reason, %(mbox_dir)s exists as a file.  This won't work with\n"
"b6, so I'm renaming it to %(mbox_dir)s.tmp and proceeding."
msgstr ""

#: bin/update:213
msgid ""
"\n"
"%(listname)s has both public and private mbox archives.  Since this list\n"
"currently uses private archiving, I'm installing the private mbox archive\n"
"-- %(o_pri_mbox_file)s -- as the active archive, and renaming\n"
"        %(o_pub_mbox_file)s\n"
"to\n"
"        %(o_pub_mbox_file)s.preb6\n"
"\n"
"You can integrate that into the archives if you want by using the 'arch'\n"
"script.\n"
msgstr ""

#: bin/update:228
msgid ""
"%s has both public and private mbox archives.  Since this list\n"
"currently uses public archiving, I'm installing the public mbox file\n"
"archive file (%s) as the active one, and renaming\n"
"        %s\n"
"    to\n"
"        %s.preb6\n"
"\n"
"You can integrate that into the archives if you want by using the 'arch'\n"
"script.\n"
msgstr ""

#: bin/update:245
msgid "- updating old private mbox file"
msgstr ""

#: bin/update:253
msgid ""
"    unknown file in the way, moving\n"
"        %(o_pri_mbox_file)s\n"
"    to\n"
"        %(newname)s"
msgstr ""

#: bin/update:260 bin/update:283
msgid ""
"    looks like you have a really recent CVS installation...\n"
"    you're either one brave soul, or you already ran me"
msgstr ""

#: bin/update:269
msgid "- updating old public mbox file"
msgstr ""

#: bin/update:277
msgid ""
"    unknown file in the way, moving\n"
"        %(o_pub_mbox_file)s\n"
"    to\n"
"        %(newname)s"
msgstr ""

#: bin/update:314
msgid "- This list looks like it might have <= b4 list templates around"
msgstr ""

#: bin/update:321
msgid "- moved %(o_tmpl)s to %(n_tmpl)s"
msgstr ""

#: bin/update:323
msgid "- both %(o_tmpl)s and %(n_tmpl)s exist, leaving untouched"
msgstr ""

#: bin/update:354
msgid "removing %(src)s"
msgstr ""

#: bin/update:358
msgid "Warning: couldn't remove %(src)s -- %(rest)s"
msgstr ""

#: bin/update:363
msgid "couldn't remove old file %(pyc)s -- %(rest)s"
msgstr ""

#: bin/update:376
msgid "no lists == nothing to do, exiting"
msgstr ""

#: bin/update:383
msgid ""
"fixing all the perms on your old html archives to work with b6\n"
"If your archives are big, this could take a minute or two..."
msgstr ""

#: bin/update:388
msgid "done"
msgstr ""

#: bin/update:390
msgid "Updating mailing list: %(listname)s"
msgstr ""

#: bin/update:392
msgid "Updating Usenet watermarks"
msgstr ""

#: bin/update:397
msgid "- nothing to update here"
msgstr ""

#: bin/update:420
msgid "- usenet watermarks updated and gate_watermarks removed"
msgstr ""

#: bin/update:430
msgid "Updating old pending_subscriptions.db database"
msgstr ""

#: bin/update:442
msgid ""
"\n"
"\n"
"NOTE NOTE NOTE NOTE NOTE\n"
"\n"
"    You are upgrading an existing Mailman installation, but I can't tell what\n"
"    version you were previously running.\n"
"\n"
"    If you are upgrading from Mailman 1.0b9 or earlier you will need to\n"
"    manually update your mailing lists.  For each mailing list you need to\n"
"    copy the file templates/options.html lists/<listname>/options.html.\n"
"\n"
"    However, if you have edited this file via the Web interface, you will have\n"
"    to merge your changes into this file, otherwise you will lose your\n"
"    changes.\n"
"\n"
"NOTE NOTE NOTE NOTE NOTE\n"
"\n"
msgstr ""

#: bin/update:495
msgid "No updates are necessary."
msgstr ""

#: bin/update:498
msgid ""
"Downgrade detected, from version %(hexlversion)s to version %(hextversion)s\n"
"This is probably not safe.\n"
"Exiting."
msgstr ""

#: bin/update:503
msgid "Upgrading from version %(hexlversion)s to %(hextversion)s"
msgstr ""

#: bin/update:512
msgid ""
"\n"
"ERROR:\n"
"\n"
"The locks for some lists could not be acquired.  This means that either\n"
"Mailman was still active when you upgraded, or there were stale locks in the\n"
"%(lockdir)s directory.\n"
"\n"
"You must put Mailman into a quiescent state and remove all stale locks, then\n"
"re-run \"make update\" manually.  See the INSTALL and UPGRADE files for details.\n"
msgstr ""

#: bin/version:26
msgid "Using Mailman version:"
msgstr ""

#. docstring
#: bin/withlist:135
msgid ""
"Unlock a locked list, but do not implicitly Save() it.\n"
"\n"
"    This does not get run if the interpreter exits because of a signal, or if\n"
"    os._exit() is called.  It will get called if an exception occurs though.\n"
"    "
msgstr ""

#: bin/withlist:144
msgid "Unlocking (but not saving) list:"
msgstr ""

#: bin/withlist:147
msgid "Finalizing"
msgstr ""

#: bin/withlist:172
msgid "No list name supplied."
msgstr ""

#: bin/withlist:177
msgid "Loading list %(listname)s"
msgstr ""

#: bin/withlist:179
msgid "(locked)"
msgstr ""

#: bin/withlist:181
msgid "(unlocked)"
msgstr ""

#: bin/withlist:194
msgid "Importing %(module)s..."
msgstr ""

#: bin/withlist:196
msgid "Running %(module)s.%(callable)s()..."
msgstr ""

